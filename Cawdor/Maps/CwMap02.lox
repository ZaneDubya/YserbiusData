#include "defines.loh"
#include "flags.loh"

#define DETECTEDDOOR 1
#define BEENHERE 2
#define DONE_LOCK 3
#define SAWWIZ 4
#define WAR1 5
#define WAR2 6
#define WAR3 7
#define WAR4 8
#define WAR5 9

fun MapEvent01(context) {
    context.ShowText("Through here is the Foyer of Cawdor.");
    context.Teleport(1, 1, 63, WEST);
}

fun MapEvent02(context) {
    if ((context.GetFlag(DUNGEON, GOT_SHIELD) == 1) || (context.GetFlag(PARTY, BEENHERE) == 1)) {
        context.ShowText("A voice whispers from thin air....");
        context.ShowText("'I'm sorry, but there's nothing else I can do for you here.'");
    }
    else {
        context.ShowPortrait(LADYMACBETH);
        context.SetFlag(PARTY, BEENHERE, 1);
        context.SetFlag(DUNGEON, THIEFROOM, 1);
        if ((context.GetFlag(DUNGEON, BARBARIANROOM) == 1) && (context.GetFlag(DUNGEON, CLERICROOM) == 1) && (context.GetFlag(DUNGEON, KNIGHTROOM) == 1) && (context.GetFlag(DUNGEON, RANGERROOM) == 1) && (context.GetFlag(DUNGEON, WIZARDROOM) == 1) && (context.GetFlag(DUNGEON, GOT_SHIELD) == 0)) {
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("'Huzzah!  Thou hast done so well hitherto that I can safely reward thee.  I think me knowledge of the spell of shielding will best serve thee now.'");
            context.ShowText("You now know that spell!");
            context.GiveSpell(SHIELD_SPELL, 1);
            context.SetFlag(DUNGEON, GOT_SHIELD, 1);
            if ((!context.GetSkillLevel(REVERIE_SKILL)) && (context.GetGuild == THIEF)) {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("Galatea takes you aside so that only you can hear her remarks.");
                context.ShowText("'What ho!  Stalwart skulker, thou hast earned a reward.  I shall grant thee the skill of Reverie.'");
                context.ModSkillLevel(REVERIE_SKILL, 1);
            }
        }
        else {
            if ((!context.GetSkillLevel(REVERIE_SKILL)) && (context.GetGuild == THIEF)) {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("Galatea takes you aside so that only you can hear her remarks.");
                context.ShowText("'What ho!  Stalwart skulker, thou hast earned a reward.  I shall grant thee the skill of Reverie.'");
                context.ModSkillLevel(REVERIE_SKILL, 1);
            }
            else {
                if (context.GetGuild == THIEF) {
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("'Greedy thou art, and yet I knew it of thee when I chose you as my champion and savior of my soul.  Thou hast already received all the rewards I can safely grant thee here, lest my sisters notice and suspect the usage of my power.'");
                }
                else {
                    if (context.GetGuildAny(THIEF)) {
                        context.ShowText("Galatea pulls your party's thieves aside for a few private words, and then returns.");
                    }
                    if (context.GetFlag(DUNGEON, SKULKREWARD) == 0) {
                        context.ShowText("'Thou art surviving, which is the important thing.  Take thee this item which mayhaps will help thee to continue doing so.'");
                        context.SetFlag(DUNGEON, SKULKREWARD, 1);
                        context.GiveItem(BINDINGTALISMAN);
                    }
                    else {
                        context.ShowText("'Thou hast earned no further rewards from me, greedyguts.'");
                    }
                }
            }
        }
    }
}

fun MapEvent03(context) {
    context.ShowText("Your hackles rise.  Something's not right here.");
    if ((context.UsedSkill(DETECT_SKILL) >= 2) || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        context.ShowText("You've uncovered a hidden door!");
        context.ClearWallBlock(context.GetTile, context.GetFacing);
        context.SetWallItem(DOOR, context.GetTile, context.GetFacing);
    }
    else {
        context.SetWallBlock(context.GetTile, context.GetFacing);
        context.ClearWallItem(context.GetTile, context.GetFacing);
    }
}

fun MapEvent04(context) {
    context.ShowText("You thought you saw - naw, it must have just been nerves after that battle.");
    if (context.UsedSkill(DETECT_SKILL) >= 3 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        context.ClearWallBlock(context.GetTile, context.GetFacing);
        context.SetWallItem(DOOR, context.GetTile, context.GetFacing);
        context.ShowText("Wait a second.  You've uncovered a hidden stairway going up!");
        context.SetFlag(ROOM, DETECTEDDOOR, 1);
    }
    else {
        context.SetFlag(ROOM, DETECTEDDOOR, 0);
        context.SetWallBlock(context.GetTile, context.GetFacing);
        context.ClearWallItem(context.GetTile, context.GetFacing);
    }
}

fun MapEvent05(context) {
    if (context.UsedSkill(DETECT_SKILL) >= 2 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        context.ShowText("There used to be a stairwell here, but it has collapsed after decades of neglect.");
        if (context.GetFlag(DUNGEON, SEENCOLLAPSEDSTAIR) == 0) {
            context.ShowText("But I like the way you think.  Have 1,000 experience points!");
            context.AddExperience(1000);
            context.SetFlag(DUNGEON, SEENCOLLAPSEDSTAIR, 1);
        }
        else {
            context.ShowText("Okay, it was cute the first time, but you're not going to get any further rewards here.");
        }
    }
}

fun MapEvent06(context) {
    if (context.GetFlag(PARTY, SAWWIZ) == 0) {
        context.SetFlag(PARTY, SAWWIZ, 1);
        context.ShowPortrait(HUMANWIZARD);
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("A wizard is muttering to himself, ignoring you.");
        context.ShowText("'I did fight the brinded cats.  I fought them twice.  I fought them thrice.  I fought the hedge pig.  I fought them twice.  I fought them thrice.  Why, then, could I not find the harpy, or the Lady?  Let me recount....I fought the brinded cats.  I fought them twice....'");
    }
}

fun MapEvent07(context) {
    context.ShowPortrait(HALFLINGCLERIC);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("Huddled in a corner, you find a delirious halfling mumbling incoherently to himself.");
    context.ShowText("'Ahh, Rory....  Would that thou hadst not drunk too soon from the Flowing Flagon.  All dead....  Its powers should have been reserved for the shade of he not born of woman.  Deanna, Philbert, all gone....'");
}

fun MapEvent09(context) {
    if (context.UsedSkill(DETECT_SKILL) >= 3 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        context.ShowText("What have we here?  You've discovered a secret door!");
        context.SetFlag(ROOM, DETECTEDDOOR, 1);
        context.ClearWallBlock(context.GetTile, context.GetFacing);
        context.SetWallItem(DOOR, context.GetTile, context.GetFacing);
    }
    else {
        context.SetFlag(ROOM, DETECTEDDOOR, 0);
        context.SetWallBlock(context.GetTile, context.GetFacing);
        context.ClearWallItem(context.GetTile, context.GetFacing);
    }
}

fun MapEvent0A(context) {
    context.ShowText("A woman sits at a desk to the west.");
}

fun MapEvent0B(context) {
    context.ShowPortrait(HUMANTHIEF);
    if (context.HasItem(WOODENLOCKPICK) || context.HasItem(BRASSLOCKPICK) || context.HasItem(IRONLOCKPICK) || context.HasItem(SILVERLOCKPICK) || context.HasItem(STEELLOCKPICK) || context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK)) {
        if (context.PartyCount == 1) {
            context.ShowText("'Yes, yes.  Thou hast fully convinced me of thy skill at detections.  Howsomever, I have naught to give thee.  Seekest thou elsewhere.'");
        }
        else {
            context.ShowText("'Fine, fine.  You either know how to find things or how to find friends who can find things.  Run along and play somewhere else.  I'm busy!'");
        }
    }
    else {
        context.ShowText("'Adequate, but fully adequate.  Let me give thee something that, fortune willing, will prove a more interesting challenge to thee.'");
        context.GiveItem(IRONLOCKPICK);
    }
}

fun MapEvent0C(context) {
    if (((context.UsedItem(ALFREDSHAT, ALFREDSHAT)) && (context.HasItem(WOODENLOCKPICK) || context.HasItem(BRASSLOCKPICK) || context.HasItem(IRONLOCKPICK) || context.HasItem(SILVERLOCKPICK) || context.HasItem(STEELLOCKPICK) || context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK))) || ((context.GetSkillLevel(LOCKPICK_SKILL) >= 1) && ((context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) || (context.UsedItem(SILVERLOCKPICK, ADAMANTINELOCKPICK)))) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING))) {
        context.ShowText("You've picked the lock. Proceed.");
        context.ClearWallBlock(context.GetTile, context.GetFacing);
    }
    else {
        context.SetWallBlock(context.GetTile, context.GetFacing);
        context.ShowText("Funny how an irksome little lock on a flimsy little door can keep out a big strong person like you.");
    }
}

fun MapEvent0D(context) {
    context.ShowPortrait(FOUNTAIN);
    if (context.CheckPartyLevel(10)) {
        Nothing(context);
    }
    else {
        if (context.GetHealth < context.GetMaxHealth) {
            context.ShowText("The refreshing waters heal your wounds.");
            context.HealPlayer(context.GetMaxHealth);
        }
        else {
            Nothing(context);
        }
    }
}

fun Nothing(context) {
    context.ShowText("The fountain does nothing for you.");
}

fun MapEvent0E(context) {
    context.ShowPortrait(HUMANTHIEF);
    if ((context.GetFlag(PARTY, DONELOCK) == 1)) {
        context.ShowText("'Arroint thee, oh thou canker of a boomerang!Thou hast received all the reward thou shalt get from mine own self this day.  Be gone!'");
    }
    else {
        if ((context.GetFlag(DUNGEON, DONELOCK) == 1)) {
            context.ShowText("'Ah!  Thou hast returned.  Hast an apple for thy teacher?  Mayhaps a coffee candy?  Ah, for the good old days, when pupils knew how to reward their teachers.  Begone!'");
        }
        else {
            context.SetFlag(DUNGEON, DONELOCK, 1);
            context.ShowText("'Cease thy smirking, oh addlepated initiate! ");
            context.ShowText("'Thou hast proven thyself fit against these minor impediments, but when thou dost match thyself against the greater locks, aye, and with Herself breathing down thy neck, then wilt thou be able to call thyself a locksmith!");
            context.ShowText("Ah, well; I suppose thou dost feel deserving of a reward, then.  I shall grant thee a golden one, an thou dost take thyself elsewhere.'");
            context.AddExperience(1000);
            context.ModGold(1000);
        }
    }
}

fun MapEvent0F(context) {
    context.ShowText("In the corner, behind a desk piled high with papers, you can see a woman scribbling furiously.");
}

fun MapEvent10(context) {
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The scroll on the wall reads: 'Do unto others before they do unto you.'");
}

fun MapEvent11(context) {
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The scroll on the wall reads: 'Courage!  And cut the cards.'");
}

fun MapEvent12(context) {
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The scroll on the wall reads: 'A snitch in time saves nine.'");
}

fun MapEvent13(context) {
    context.ShowPortrait(HUMANTHIEF);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The caption reads: 'Our founder: Hieronymous Snivel.'");
}

fun MapEvent14(context) {
    var i;
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.SetFlag(PARTY, WAR1, 1);
        context.ShowText("You come across some sinister sorcerors!");
        if (context.PartyCount > 2) {
            context.ShowText("And their servants!");
        }
        context.SetTreasure(BEGONIABALM, 0, 0, 0, 0, 135);
        context.AddEncounter(1, 40);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 40);
            context.AddEncounter(3, 14);
            context.AddEncounter(4, 14);
        }
        else {
            if (context.PartyCount > 1) {
                context.AddEncounter(2, 40);
                context.AddEncounter(3, 40);
            }
        }
    }
    else {
        context.ShowText("All that remains of your battle here is a slightly smoking mage's hat.");
    }
}

fun MapEvent15(context) {
    var i;
    if (context.GetFlag(PARTY, WAR2) == 0) {
        context.ShowText("Uh oh!  Here come some vicious Vikings!");
        context.SetFlag(PARTY, WAR2, 1);
        if (context.PartyCount > 2) {
            context.ShowText("And some naughty northmen, too!");
        }
        context.SetTreasure(BEGONIABALM, SPEAR, 0, 0, 0, 135);
        context.AddEncounter(1, 30);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 30);
            context.AddEncounter(3, 33);
            context.AddEncounter(4, 33);
        }
        else {
            if (context.PartyCount > 1) {
                context.AddEncounter(2, 30);
                context.AddEncounter(3, 30);
            }
        }
    }
    else {
        context.ShowText("All that remains of your battle here is a broken axe and some sunscreen.");
        if (context.GetFlag(PARTY, WAR2) == 1) {
            context.SetFlag(PARTY, WAR2, 2);
            context.ShowText("Even in 1200 A.D. they knew how susceptible fair-skinned folks are to skin cancer.");
            context.ShowText("We now leave our public service announcement and return to our regularly scheduled game.");
        }
    }
}

fun MapEvent16(context) {
    var i;
    if (context.GetFlag(PARTY, WAR3) == 0) {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("Those nasty nuns aren't wielding rulers!");
        if (context.PartyCount > 2) {
            context.ShowText("Neither are those bad brothers!");
        }
        context.SetTreasure(SHORTBOW, THORSSCROLL, 0, 0, 0, 135);
        context.AddEncounter(1, 39);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 39);
            context.AddEncounter(3, 23);
            context.AddEncounter(4, 23);
        }
        else {
            if (context.PartyCount > 1) {
                context.AddEncounter(2, 39);
                context.AddEncounter(3, 39);
            }
        }
    }
    else {
        context.ShowText("All that remains of your battle here are some bad habits.");
        context.ShowText("I couldn't resist.");
    }
}

fun MapEvent17(context) {
    if (context.GetFlag(PARTY, WAR4) == 0) {
        context.SetFlag(PARTY, WAR4, 1);
        context.ShowText("Gadzooks!  'Tis a gang of wretched refugees from this unholy hive of scum and villainy.");
        if (context.PartyCount > 2) {
            context.ShowText("Hmm.  There are an awful lot of them.");
        }
        context.SetTreasure(BEGONIABALM, BLUEBERRYBREW, CROSSBOW, 0, 0, 135);
        context.AddEncounter(1, 25);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 34);
            context.AddEncounter(3, 37);
            context.AddEncounter(4, 36);
            context.AddEncounter(5, 29);
            context.AddEncounter(6, 35);
        }
        else {
            if (context.PartyCount > 1) {
                context.AddEncounter(2, 35);
                context.AddEncounter(3, 31);
                context.AddEncounter(4, 28);
            }
            else {
                context.AddEncounter(2, 37);
            }
        }
    }
}

fun MapEvent18(context) {
    var i;
    if (context.GetFlag(PARTY, WAR5) == 0) {
        context.SetFlag(PARTY, WAR5, 1);
        context.ShowText("Fie!  'Tis a veritable herd of belligerent bovines!");
        if (context.PartyCount > 2) {
            context.ShowText("And their owners?");
        }
        context.SetTreasure(BEGONIABALM, BLUEBERRYBREW, LINDENSHIELD, BLUETARTANCLOAK, 0, 135);
        context.AddEncounter(1, 38);
        context.AddEncounter(2, 38);
        if (context.PartyCount > 2) {
            context.AddEncounter(3, 38);
            context.AddEncounter(4, 38);
            context.AddEncounter(5, 40);
            context.AddEncounter(6, 40);
        }
        else {
            if (context.PartyCount > 1) {
                context.AddEncounter(3, 38);
                context.AddEncounter(4, 38);
            }
        }
    }
    else {
        context.ShowText("All that remains of your battle here is an empty milk carton.  Fortunately it isn't your picture on the back.");
    }
}

fun MapEvent19(context) {
    context.ShowText("Your hackles rise.  Something's not right here.");
    if (context.UsedSkill(DETECT_SKILL) >= 3 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        context.ShowText("You've uncovered a hidden door!");
        context.ClearWallBlock(context.GetTile, context.GetFacing);
        context.SetWallItem(DOOR, context.GetTile, context.GetFacing);
    }
    else {
        context.SetWallBlock(context.GetTile, context.GetFacing);
        context.ClearWallItem(context.GetTile, context.GetFacing);
    }
}

fun MapEvent1A(context) {
    if (context.GetFlag(DUNGEON, HEARDJOKE2) == 0) {
        context.SetFlag(DUNGEON, HEARDJOKE2, 1);
        context.ShowPortrait(DRAGON);
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("Comets and meteors!  An enormous red dragon rears up and addresses to you.");
        if ((context.GetFlag(DUNGEON, HEARDJOKE1) == 0) && (context.GetFlag(DUNGEON, HEARDJOKE4) == 0) && (context.GetFlag(DUNGEON, HEARDJOKE3) == 0)) {
            context.ShowText("'Hmm.  There are two ways this could go.  We could have similar senses of humor, and part friends, or I could just eat thee.  So.  Wouldst hear a joke about a stupid green dragon named Gwalter the Dim?'");
        }
        else {
            context.ShowText("'Ah!  I remember thee.  As I recall, thou didst enjoy my last joke.  Wouldst thou hear another?'");
        }
        context.ShowText("You quickly nod.");
        context.ShowText("'Gwalter was such a stupid green dragon that he made his abode in a live volcano.  One day a friend of his, a much wiser red dragon, came to visit.  In landing the friend knocked a farthing off the ledge down into the murky depths.  Gwalter immediately threw his finest jewels and gems down the shaft.'");
        context.ShowText("'Gwalter's friend asked, 'By my claws and scales, what art thou doing?'");
        context.ShowText("'Gwalter replied, 'I am not going down there for just a farthing!'");
        context.ShowText("You manage to join the dragon in a chuckle.  The dragon flies off smiling, or at least showing many teeth.");
    }
}

fun MapEvent1B(context) {
    context.SetFlag(DUNGEON, ENTEREDSKULKATORIUM, 1);
}

fun MapEvent2D(context) {
    context.ShowPortrait(LADYMACBETH);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The caption reads: 'MissyCD, the Guildmother of us all, who toiled on behalf of Cawdor's Thieves until her enormous heart gave out.  We honor her memory.'");
    context.ShowText("Any resemblance between her and the lovely Galatea is purely coincidental.");
}

fun MapEvent2E(context) {
    context.ShowPortrait(DWARFTHIEF);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The caption reads: 'Borboriador Demonslayer, thief of the decade 1150-1159'");
}

fun MapEvent2F(context) {
    context.ShowPortrait(GNOMETHIEF);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The caption reads: 'Gnorm Gnorton, thief of the decade 1160-1169'");
}

fun MapEvent30(context) {
    context.ShowPortrait(HALFLINGTHIEF);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The caption reads: 'Rory Applebush, thief of the decade 1170-1179, holder of the all time record for gold piece to body weight ratio.'");
}

fun MapEvent31(context) {
    context.ShowPortrait(GREMLINTHIEF);
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("*");
    context.ShowText("The caption reads: 'Angus McSneaky, the Gremlin who survived the longest after looting a dragon's horde: six hours, twelve minutes.");
}
