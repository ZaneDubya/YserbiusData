#include "defines.loh"
#include "flags.loh"

#define DETECTED_DOOR 1
#define WAR1 1
#define WAR2 2
#define WAR3 3
#define WAR4 4
#define WAR5 5
#define WAR6 6
#define WAR7 7
#define CTR 8
#define TRACKING 9
#define BEENHERE 10
#define SEENSTORAGE 11
#define DRAGONWARNING 12
#define ELFHEALED 13
#define BIGBATTLEWARNING 14
#define SEENBOLTS 15
#define SEENROCKS 16
#define SEENPITCH 17
#define SEENNASTY 18

fun MapEvent05(context) {
    var i;
    i = 0;
    var k;
    k = 0;
    i = context.GetFlag(PARTY, CTR);
    i++;
    k = i;
    if (k > 19) {
        k = (k - 20);
    }
    if (k > 14) {
        k = (k - 15);
    }
    if (k > 9) {
        k = (k - 10);
    }
    if (k > 4) {
        k = (k - 5);
    }
    if (k < 0) {
        k = 0;
    }
    if (k > 29) {
        k = 0;
    }
    if (i > 30) {
        i = 0;
    }
    context.SetFlag(PARTY, CTR, i);
    if ((i == 26) | (i == 20) | (i == 14) | (i == 8) | (i == 2)) {
        switch (k) {
            case 0:
                context.ShowText("You hear some footsteps running away.");
                break;
            case 1:
                context.ShowText("You hear someone strolling towards you.");
                context.ShowPicture(GREMLINWIZARD);
                context.ShowText("The gremlin greets you heartily.");
                context.ShowText("'I just received the strangest prophecy in Astrologia.  But I think I see through some of it.  The deadly herbs are in Althea's demesne.  I should go look her up.'");
                context.ShowText("She remains standing there, lost in thought.");
                break;
            case 2:
                context.ShowPicture(DRAGON);
                if (context.GetFlag(DUNGEON, HEARDJOKE7) == 0) {
                    context.ShowText("The dragon examines you with a hint of recognition.");
                    context.ShowText("'Ah!  Whither hast thou been? I have heard yet another green dragon joke, and my thoughts turned to thee.  Wouldst hear it?'");
                    context.ShowText("You nod.  Or is it more of a shrug?");
                    context.ShowText("'Why is a green dragon's head like the lower left store room in here?'");
                    context.ShowText("You ask why.");
                    context.ShowText("'They're both filled with large round hard useless objects!'");
                    context.ShowText("'Aren't they both filled with rocks?' you ask politely.");
                    context.ShowText("'That too!'  The dragon falls over, laughing uncontrollably.  You would shake your head, but prudence dictates a quiet retreat.");
                    context.SetFlag(DUNGEON, HEARDJOKE7, 1);
                }
                else {
                    context.ShowText("'Ah, my friend!  Look not so worried.  I am sure I will hear or devise another green dragon joke before long!'");
                    context.ShowText("It wouldn't do to say this, but the prospect of yet another dragon joke is why you looked so worried.");
                }
                break;
            case 3:
                context.ShowPicture(HALFLINGKNIGHT);
                context.ShowText("A downtrodden halfling knight ambles aimlessly by you.");
                context.ShowText("'Serves me right to expect anything cobbled together from horseshoes to bear my weight,' she mutters as she passes.");
                break;
            case 4:
                context.ShowText("A boisterous band of burglars decides, reasonably, that they are bigger than you are.");
                context.SetBooty(LARGELETTEROFCREDIT, WOADWINE, 0, 0, 0, 1193);
                context.GetMonster(1, 25);
                if (context.PartyCount > 1) {
                    context.GetMonster(5, 25);
                }
                if (context.PartyCount > 2) {
                    context.GetMonster(2, 25);
                    context.GetMonster(6, 25);
                }
                break;
        }
    }
}

fun MapEvent06(context) {
    context.ShowText("A cold breeze sends shivers down your spine.");
}

fun MapEvent07(context) {
    context.ShowText("This door leads to the Nasty Little Maze.");
    context.Teleport(11, 1, 11, SOUTH);
}

fun MapEvent08(context) {
    context.ShowText("This door leads to the Astrologia.");
    context.Teleport(10, 1, 112, EAST);
}

fun MapEvent09(context) {
    if (context.GetFlag(DUNGEON, SEENRORY) == 0) {
        if (context.GetFlag(PARTY, BEENHERE) == 0) {
            context.SetFlag(PARTY, BEENHERE, 1);
            context.ShowPicture(HALFLINGTHIEF);
            context.ShowText("Rory's clothes are sweat stained, and his brow furrowed.  Still, a smile crosses his face as he greets you.");
            context.ShowText("'Ah, 'tis good to have a chance for a breather, for this is a fractious place created by a devious and disturbed mind.");
            context.ShowText("'It is called the Parapets, but insofar as I can determine it is a loathsome play on words, for many are the corners filled with pairs of groups of great beasts.");
            context.ShowText("'I know not what manner of being keeps drakes, wolves, medusae, or minotaurs for pets, and I do not care to meet him.");
            context.ShowText("'I can say this; the tongue of dog, tooth of wolf, and scale of dragon, have been most useful here.  But I have yet to find that which cows the medusae or minotaurs.");
            context.ShowText("'I'm for the lower levels and regrouping.  Good luck, and watch thy back!'");
        }
        else {
            context.ShowText("The howls of a hundred creatures echo through the parapets.");
        }
    }
    else {
        context.ShowText("Once upon a time Rory gave you some good advice here, but his days as your adviser are ended.");
    }
}

fun MapEvent0A(context) {
    context.ShowText("The torches are smoky, creating an eery mood in here.");
}

fun MapEvent0B(context) {
    context.ShowText("The windows are hinged, allowing easy opening for airing the place out or, more likely, for firing ranged weapons and dumping noxious compounds on an enemy.");
    context.ShowText("If they were just a little more corroded, though, leaning out could well prove fatal.");
}

fun MapEvent0C(context) {
    context.ShowPicture(ELFRANGER);
    context.ShowText("The caption reads:  'The late William o'the Dales, undisputed record holder and winner of the 1168 ballista catch.'");
}

fun MapEvent0D(context) {
    context.ShowPicture(DWARFKNIGHT);
    context.ShowText("The caption reads:  'Jonny of the Mountain Hall, who once slew a trio of giants with but a single toss of his mighty hammer.'");
}

fun MapEvent0E(context) {
    context.ShowPicture(GNOMEWIZARD);
    context.ShowText("The caption reads:  'Richard of the Storm, who did devise a formula for capturing the Greek Fire.  All we ever found was the hilt of his dagger.  Requiescat en Pacem.'");
}

fun MapEvent0F(context) {
    context.ShowPicture(HUMANWIZARD);
    context.ShowText("The caption reads:  'Edward of the White Cathedral, who first poured heated pitch on those outside the keep.  It worked so well when the Picts attacked that the survivors of the first spill forgave him.'");
}

fun MapEvent10(context) {
    context.ShowPicture(TROLLRANGER);
    context.ShowText("The caption reads:  'Eric the Steady, son of Eric the Sufferer, who proved that a truly strong troll can catch and hold a 2800 pound boulder.  For 1.2 seconds.  Before being squashed.");
}

fun MapEvent11(context) {
    context.ShowPicture(ELFBARBARIAN);
    context.ShowText("The caption reads:  'Deborah of the Marble Chapel, who asked the innocent question that exposed a plot long buried.'");
}

fun MapEvent12(context) {
    context.ShowPicture(HUMANBARBARIAN);
    context.ShowText("The caption reads:  'Jimmy of the Blood, as noted a painter as he was a general.'");
}

fun MapEvent13(context) {
    context.ShowPicture(HUMANWIZARD);
    context.ShowText("The caption reads:  'Geordie the Skunkcatcher, who shot the sheriff and escaped to tell about it.'");
}

fun MapEvent14(context) {
    context.ShowPicture(ORCKNIGHT);
    context.ShowText("The caption reads:  'Scotty the Smith, who proved that a truly inspired archer, from these very parapets, can indeed place an arrow into the heart of a general atop Stormcrow hill.'");
}

fun MapEvent15(context) {
    context.ShowPicture(ORCBARBARIAN);
    context.ShowText("The caption reads:  'Mandy of the Inks, who demonstrated that by predesignating targets and marking their aims afore the battle, one can have great success at shooting during the battle.'");
}

fun MapEvent16(context) {
    context.ShowPicture(ELFCLERIC);
    context.ShowText("The caption reads:  'Richard of the Irish River, who demonstrated that not only does fine wine raise the will to fight, but that at need and sufficient height an empty wine bottle can kill.'");
}

fun MapEvent17(context) {
    context.ShowPicture(HUMANWIZARD);
    context.ShowText("The caption reads:  'Mickey of the Upper Dells, who most cunningly proved that a boulder is better than a pebble when stoning an enemy.'");
}

fun MapEvent18(context) {
    context.ShowPicture(TROLLRANGER);
    context.ShowText("The caption reads:  'Clifford the Quiet, master of the crossbow and the galley oar.'");
}

fun MapEvent19(context) {
    context.ShowPicture(HUMANTHIEF);
    context.ShowText("The caption reads:  'Cynthia of the Cats, creator of the pegasus brigade and discoverer of the remarkable fertilizing qualities of pegasus droppings.  Retired.'");
}

fun MapEvent1A(context) {
    context.ShowPicture(HALFLINGTHIEF);
    context.ShowText("The caption reads:  'Richard, son of the Emerald Isles, who showed that a bag of gems might buy what an army could not take.'");
}

fun MapEvent1B(context) {
    context.ShowPicture(ORCBARBARIAN);
    context.ShowText("The caption reads:  'Molly of the Concentric Circles, who in giving her life did ensure Scotty's fame.'");
}

fun MapEvent1C(context) {
    if (context.GetFlag(PARTY, SEENSTORAGE) == 0) {
        context.SetFlag(PARTY, SEENSTORAGE, 1);
        context.ShowText("You see a large storage area.  The smell in here is unpleasant, and the sounds are noisome and diverse.  On either wall is a plaque explaining where various armaments are stored.");
        context.ShowText("That is, assuming any armaments remain.");
    }
    else {
        context.ShowText("The storage area remains as you left it.");
    }
}

fun MapEvent1D(context) {
    context.ShowText("The plaque explains that quarrels and bolts were stored in the lower right area, stones and rocks in the lower left, oil and pitch in the upper right, and 'nasties, heh heh' in the upper left.");
    context.ShowText("But judging from the sounds nearby, the equipment rooms have been taken over by rude and unpleasant creatures who did not bother to update the plaques.  Shame on them!");
}

fun MapEvent1E(context) {
    if (context.GetFlag(PARTY, WAR1) == 1) {
        context.Teleport(11, 2, 195, context.Facing);
    }
    else {
        context.ShowText("From the sounds on the other side of this door, you prepare yourself for immediate battle after going though it.");
        if (context.HasItem(GALLOFGOAT)) {
            context.Teleport(11, 2, 210, context.Facing);
        }
        else {
            context.Teleport(11, 2, 225, context.Facing);
        }
    }
}

fun MapEvent1F(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.SetFlag(PARTY, WAR1, 1);
        context.ShowText("Ayee!  It's the flock of killer goats!");
        context.ShowText("Oh, all right, I'll admit they sure look like minotaurs, but believe me, they sure smell like goats.");
        context.SetBooty(ALFREDSHAT, ALDHELMSGAUNTLETS, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 38);
        context.GetMonster(2, 39);
        context.GetMonster(3, 39);
        context.GetMonster(4, 38);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 39);
            context.GetMonster(6, 38);
        }
    }
    else {
        context.ShowText("Your epic struggle with the bovine goats left goatees scattered all over the place (heh heh).");
    }
}

fun MapEvent20(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.SetFlag(PARTY, WAR1, 1);
        context.ShowText("Ayee!  It's the flock of killer goats!");
        context.ShowText("Oh, all right, I'll admit they sure look like minotaurs, but believe me, they sure smell like goats.");
        context.SetBooty(ALFREDSHAT, ALDHELMSGAUNTLETS, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 40);
        context.GetMonster(2, 39);
        context.GetMonster(3, 40);
        context.GetMonster(4, 39);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 40);
            context.GetMonster(6, 40);
        }
    }
    else {
        context.ShowText("Your epic struggle with the bovine goats left goatees scattered all over the place (heh heh).");
    }
}

fun MapEvent21(context) {
    if (context.GetFlag(PARTY, WAR2) == 1) {
        context.Teleport(11, 2, 51, context.Facing);
    }
    else {
        context.ShowText("You think you hear the sounds of a baying wolf through this door, and prepare yourself for combat.");
        context.ShowText("Hmm.  Bay o'wolf.  Maybe there's a story in there.");
        if (context.HasItem(TOOTHOFWOLF)) {
            context.Teleport(11, 2, 17, context.Facing);
        }
        else {
            context.Teleport(11, 2, 34, context.Facing);
        }
    }
}

fun MapEvent22(context) {
    if (context.GetFlag(PARTY, WAR2) == 0) {
        context.SetFlag(PARTY, WAR2, 1);
        context.ShowText("My goodness!  Look at all those wolves packed in here.  Hmm.  Wolvespacked.  Maybe there's a story there.");
        context.SetBooty(TOOTHOFWOLF, GORGONSGAUNTLETS, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 34);
        context.GetMonster(2, 34);
        context.GetMonster(3, 34);
        context.GetMonster(4, 34);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 34);
            context.GetMonster(6, 34);
        }
    }
    else {
        context.ShowText("You find the signs of your battle with the wolves all over this area.");
        context.ShowText("You've already performed all the dentistry possible here, with complete disregard for the wolf's place on the endangered species list.");
    }
}

fun MapEvent23(context) {
    if (context.GetFlag(PARTY, WAR2) == 0) {
        context.SetFlag(PARTY, WAR2, 1);
        context.ShowText("My goodness!  Look at all those wolves packed in here.  Hmm.  Wolvespacked.  Maybe there's a story there.");
        context.SetBooty(TOOTHOFWOLF, GORGONSGAUNTLETS, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 32);
        context.GetMonster(2, 33);
        context.GetMonster(3, 32);
        context.GetMonster(4, 33);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 32);
            context.GetMonster(6, 33);
        }
    }
    else {
        context.ShowText("You find the signs of your battle with the wolves all over this area.");
        context.ShowText("You've already performed all the dentistry possible here, with complete disregard for the wolf's place on the endangered species list.");
    }
}

fun MapEvent24(context) {
    if (context.GetFlag(PARTY, WAR3) == 1) {
        context.Teleport(11, 2, 60, context.Facing);
    }
    else {
        context.ShowText("You think you hear the growls of a great mastiff, a giant hound, through the door.");
        context.ShowText("Hmm.  The Hound of - naw, there's no way to fit any decent story into that title.");
        if (context.HasItem(TONGUEOFDOG)) {
            context.Teleport(11, 2, 45, context.Facing);
        }
        else {
            context.Teleport(11, 2, 30, context.Facing);
        }
    }
}

fun MapEvent25(context) {
    if (context.GetFlag(PARTY, WAR3) == 0) {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("Have you ever heard of puppy love.  Well, these dogs haven't!  Watch out!");
        context.SetBooty(TONGUEOFDOG, TONGUEOFDOG, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 36);
        context.GetMonster(2, 35);
        context.GetMonster(3, 36);
        context.GetMonster(4, 35);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 36);
            context.GetMonster(6, 35);
        }
    }
    else {
        context.ShowText("Reminders of your battle in this area still dog your footsteps.  Yuk.");
        context.ShowText("You've already taught those puppies the value of love.  Tough love.  Really really tough love.");
    }
}

fun MapEvent26(context) {
    if (context.GetFlag(PARTY, WAR3) == 0) {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("Have you ever heard of puppy love.  Well, these dogs haven't!  Watch out!");
        context.SetBooty(TONGUEOFDOG, TONGUEOFDOG, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 37);
        context.GetMonster(2, 37);
        context.GetMonster(3, 37);
        context.GetMonster(4, 37);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 37);
            context.GetMonster(6, 37);
        }
    }
    else {
        context.ShowText("Reminders of your battle in this area still dog your footsteps.  Yuk.");
        context.ShowText("You've already taught those puppies the value of love.  Tough love.  Really really tough love.");
    }
}

fun MapEvent27(context) {
    if (context.GetFlag(PARTY, WAR4) == 1) {
        context.Teleport(11, 2, 204, context.Facing);
    }
    else {
        context.ShowText("You hear a lot of hissing through this door, as if a veritable snakepit.  You'd put on your hightop boots, if you had any.");
        if (context.HasItem(BLINDWORMSTING)) {
            context.Teleport(11, 2, 221, context.Facing);
        }
        else {
            context.Teleport(11, 2, 238, context.Facing);
        }
    }
}

fun MapEvent28(context) {
    if (context.GetFlag(PARTY, WAR4) == 0) {
        context.SetFlag(PARTY, WAR4, 1);
        context.ShowText("See!  High topped boots wouldn't have helped you anyways!");
        context.SetBooty(BLINDWORMSTING, BLINDWORMSTING, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 26);
        context.GetMonster(2, 27);
        context.GetMonster(3, 26);
        context.GetMonster(4, 27);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 26);
            context.GetMonster(6, 27);
        }
    }
    else {
        context.ShowText("Boy, the snake skins sure got spattered everywhere.");
        context.ShowText("Hmm.  You probably could get some high topped snake skin boots made, if you knew a cobbler.  But any cobblers left around here have already been eaten by the halflings.");
    }
}

fun MapEvent29(context) {
    if (context.GetFlag(PARTY, WAR4) == 0) {
        context.SetFlag(PARTY, WAR4, 1);
        context.ShowText("See!  High topped boots wouldn't have helped you anyways!");
        context.SetBooty(BLINDWORMSTING, BLINDWORMSTING, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 28);
        context.GetMonster(2, 28);
        context.GetMonster(3, 28);
        context.GetMonster(4, 28);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 28);
            context.GetMonster(6, 28);
        }
    }
    else {
        context.ShowText("Boy, the snake skins sure got spattered everywhere.");
        context.ShowText("Hmm.  You probably could get some high topped snake skin boots made, if you knew a cobbler.  But any cobblers left around here have already been eaten by the halflings.");
    }
}

fun MapEvent2A(context) {
    context.ShowPicture(ELFCLERIC);
    if (context.GetFlag(PARTY, WAR5) == 0) {
        if (context.GetFlag(PARTY, DRAGONWARNING) == 0) {
            context.SetFlag(PARTY, DRAGONWARNING, 1);
            context.ShowText("'Look, friend, I've been told to keep everyone out of this room.  There are dragons in here, large violent firebreathing, uh....'");
            context.ShowText("His voice trails off as he hears your party mutter 'Cool!' 'About time!' 'Let's break some drake!' and other inappropriate epithets, combined with a loosening of your weapons.");
            context.ShowText("'Well, I am not about to stand in your way,' he continues, 'but never let it be said that thou wert unwarned.'");
        }
        else {
            context.ShowText("'I am glad thou hast heeded my warning,' says the elf.");
            if (context.GetFlag(PARTY, ELFHEALED) == 0) {
                context.SetFlag(PARTY, ELFHEALED, 1);
                context.ShowText("'And for thy wisdom, a small reward.'");
                context.Heal(1000);
            }
        }
    }
    else {
        if (context.GetFlag(PARTY, DRAGONWARNING) == 0) {
            context.SetFlag(PARTY, DRAGONWARNING, 1);
            context.ShowText("You wave various trophies taken from the drakes in the cleric's face.  When adventurers are as tough as you've become, you don't need to be courteous.");
        }
        else {
            context.ShowText("The elf shakes his head, sadly.");
        }
    }
}

fun MapEvent2B(context) {
    if (context.GetFlag(PARTY, WAR5) == 1) {
        context.Teleport(11, 2, 169, context.Facing);
    }
    else {
        context.ShowText("Naw.  It couldn't be.  But you'd swear that you heard some faint voices quietly chanting 'munchies' repeatedly.");
        if (context.HasItem(SCALEOFDRAGON)) {
            context.Teleport(11, 2, 170, context.Facing);
        }
        else {
            context.Teleport(11, 2, 187, context.Facing);
        }
    }
}

fun MapEvent2C(context) {
    if (context.GetFlag(PARTY, WAR5) == 0) {
        context.SetFlag(PARTY, WAR5, 1);
        context.ShowText("Uh oh!  Why do you suddenly feel like a snack pack?");
        context.SetBooty(SCALEOFDRAGON, SCALEOFDRAGON, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 29);
        context.GetMonster(2, 30);
        context.GetMonster(3, 29);
        context.GetMonster(4, 30);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 29);
            context.GetMonster(6, 30);
        }
    }
    else {
        context.ShowText("You see some spattered pieces of dragon.");
        context.ShowText("I guess sometimes the snackees win!");
    }
}

fun MapEvent2D(context) {
    if (context.GetFlag(PARTY, WAR5) == 0) {
        context.SetFlag(PARTY, WAR5, 1);
        context.ShowText("Uh oh!  Why do you suddenly feel like a snack pack?");
        context.SetBooty(SCALEOFDRAGON, SCALEOFDRAGON, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 31);
        context.GetMonster(2, 31);
        context.GetMonster(3, 31);
        context.GetMonster(4, 31);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 31);
            context.GetMonster(6, 31);
        }
    }
    else {
        context.ShowText("You see some spattered pieces of dragon.");
        context.ShowText("I guess sometimes the snackees win!");
    }
}

fun MapEvent2E(context) {
    context.ShowPicture(ELFCLERIC);
    if (context.GetFlag(PARTY, WAR6) == 0) {
        if (context.GetFlag(PARTY, BIGBATTLEWARNING) == 0) {
            context.SetFlag(PARTY, BIGBATTLEWARNING, 1);
            context.ShowText("The elf looks you very seriously in the eye.");
            context.ShowText("'Some battles cannot be won,' he says.  'An thou dost enter here, it is upon thy head.'");
            context.ShowText("'There are not just drakes within, but they are equipped with the most puissant weapons of the old magics, weapons designed to destroy armies.'");
            context.ShowText("'I do beg of thee, leave off.  This is not the place for aught but heroes from the age of legend.'");
        }
        else {
            context.ShowText("'Thou hast been warned,' the elf says.");
        }
    }
    else {
        if (context.GetFlag(PARTY, BIGBATTLEWARNING) == 0) {
            context.SetFlag(PARTY, DRAGONWARNING, 1);
            context.ShowText("'Some battles just needed someone tougher to fight them,' you tell the elf, a broad smile on your face.");
        }
        else {
            context.ShowText("The elf shakes his head, sadly.");
        }
    }
}

fun MapEvent2F(context) {
    if (context.GetFlag(PARTY, WAR6) == 0) {
        context.Damage(context.MaxHealth / 2);
        context.ModMana(-4999);
        context.SetFlag(PARTY, WAR6, 1);
        context.ShowText("Hmm.  Could the sudden wave of fatigue be being hit by 'nasties' or is it just the realization that there are a whole lot of dragons in front of you?");
        context.SetBooty(SCALEOFDRAGON, SCALEOFDRAGON, DRAGONFLAGON, 0, 0, 1219);
        context.GetMonster(1, 31);
        context.GetMonster(2, 31);
        context.GetMonster(3, 31);
        context.GetMonster(4, 31);
        context.GetMonster(5, 31);
        context.GetMonster(6, 31);
    }
    else {
        context.ShowText("Well, you're just as happy not to have to go through that all over again.  Dragons are bad enough, but setting them up with 'nasties' for an ambush was too much.");
    }
}

fun MapEvent30(context) {
    if (context.GetFlag(PARTY, SEENBOLTS) == 0) {
        context.SetFlag(PARTY, SEENBOLTS, 1);
        context.ShowText("If you intended to pick a quarrel, you've come to the right place.  It's a shame that they were all designed for larger bows than you bear.");
    }
    else {
        context.ShowText("There are many useless sharp pointy things here.  Useless to you, anyways.");
    }
}

fun MapEvent31(context) {
    if (context.GetFlag(PARTY, SEENROCKS) == 0) {
        context.SetFlag(PARTY, SEENROCKS, 1);
        context.ShowText("If you intended to pick a quarry, you've come to the right place.  It's a shame that they were all designed for catapults.  Besides, your backpack is only rated for 200 pounds.");
        context.ShowText("And never you mind how all that gold fits in there.  We'll just call it magic and leave well enough alone.");
    }
    else {
        context.ShowText("There are many useless round hard things here.  Useless to you, anyways.");
    }
}

fun MapEvent32(context) {
    if (context.GetFlag(PARTY, SEENPITCH) == 0) {
        context.SetFlag(PARTY, SEENPITCH, 1);
        context.ShowText("If you intended to pick a barrel, you've come to the right place.  It's a shame that they were all designed for boiling pots, and are far too large to carry.");
    }
    else {
        context.ShowText("If you ever need oil, tar, or pitch, you know where to get some.");
    }
}

fun MapEvent33(context) {
    if (context.GetFlag(PARTY, SEENNASTY) == 0) {
        context.SetFlag(PARTY, SEENNASTY, 1);
        context.ShowText("Okay.  The place reeks.  Your head hurts, and you're not sure of your ability to cast spells.");
        context.ShowText("Other than that, this place isn't nasty at all.");
        context.Damage(context.MaxHealth / 3);
        context.ModMana(-2000);
    }
    else {
        context.ShowText("There are many useless round hard things here.  Useless to you, anyways.");
        context.Damage(context.MaxHealth / 3);
        context.ModMana(-2000);
    }
}

fun MapEvent34(context) {
    context.NoSpell;
    context.Damage(1444);
    context.ShowText("This is a nasty place.");
}

fun MapEvent35(context) {
    context.ModMana(-1444);
    context.ShowText("This is a nasty place.");
}

fun MapEvent36(context) {
    context.NoManaZone;
    context.Damage(1444);
    context.ShowText("This is a nasty place.");
}

fun MapEvent37(context) {
    context.NoHealZone;
    context.NoManaZone;
    context.NoSpell;
    context.Damage(2667);
    context.ModMana(-1444);
    if (context.Facing == EAST) {
        context.Rotate(NORTH);
    }
    else {
        if (context.Facing == NORTH) {
            context.Rotate(SOUTH);
        }
        else {
            if (context.Facing == SOUTH) {
                context.Rotate(EAST);
            }
        }
    }
    context.ShowText("This is a very nasty place.");
}

fun MapEvent38(context) {
    if (context.GetFlag(PARTY, WAR1) == 1) {
        context.ShowText("Your epic struggle with the bovine goats left goatees scattered all over the place (heh heh).");
    }
}

fun MapEvent39(context) {
    if (context.GetFlag(PARTY, WAR4) == 1) {
        context.ShowText("Boy, the snake skins sure got spattered everywhere.");
        context.ShowText("You probably could get some high topped snake skin boots made, if you knew a cobbler.  But any cobblers left around here have already been eaten by the halflings.");
    }
}

fun MapEvent3A(context) {
    if (context.GetFlag(PARTY, WAR5) == 1) {
        context.ShowText("You see some spattered pieces of dragon.");
        context.ShowText("I guess sometimes the snackees win!");
    }
}

fun MapEvent3B(context) {
    if (context.GetFlag(PARTY, WAR3) == 1) {
        context.ShowText("Reminders of your battle in this area still dog your footsteps.  Yuk.");
        context.ShowText("You've already taught those puppies the value of love.  Tough love.  Really really tough love.");
    }
}

fun MapEvent3C(context) {
    if (context.GetFlag(PARTY, WAR2) == 1) {
        context.ShowText("You find the signs of your battle with the wolves all over this area.");
        context.ShowText("You've already performed all the dentistry possible here, with complete disregard for the wolf's place on the endangered species list.");
    }
}
