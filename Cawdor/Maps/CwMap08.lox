#include "defines.loh"
#include "flags.loh"

#define DETECTED_DOOR 1
#define ONTRAIL 2
#define S28 3
#define S29 4
#define S30 5
#define S31 6
#define TRACKING 1
#define NORTHDOOR 2
#define DID_FLEANCE 3
#define WAR1 4
#define WAR2 5
#define WAR3 6
#define WAR4 7
#define WAR5 8
#define WAR6 9
#define WAR7 10
#define CTR 11
#define ELFWARNING 12
#define NARROW 13
#define NARROW2 14
#define SEENGALMSG 15
#define READYTOGO 16
#define GOTFLEANCELOOT 17

fun MapEvent01(context) {
    context.ShowText("It sure is drafty in here.");
    if (context.UsedSkill(DETECT_SKILL) >= 2 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        context.ClearWall(context.Here, context.Facing);
        context.PlaceWallItem(DOOR, context.Here, context.Facing);
        context.ShowText("You've uncovered a hidden door!");
    }
    else {
        context.BlockWall(context.Here, context.Facing);
        context.RemoveWallItem(context.Here, context.Facing);
    }
}

fun MapEvent02(context) {
    if ((context.UsedSkill(DETECT_SKILL) >= 2) || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS) || context.FlagOn(ROOM, DETECTED_DOOR)) {
        context.PlaceWallItem(DOOR, context.Here, context.Facing);
        context.SetFlag(ROOM, DETECTED_DOOR, 1);
        if (((context.UsedItem(ALFREDSHAT, ALFREDSHAT)) && (context.HasItem(WOODENLOCKPICK) || context.HasItem(BRASSLOCKPICK) || context.HasItem(IRONLOCKPICK) || context.HasItem(SILVERLOCKPICK) || context.HasItem(STEELLOCKPICK) || context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK))) || ((context.GetSkill(LOCKPICK_SKILL) >= 6) && ((context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) || (context.UsedItem(SILVERLOCKPICK, ADAMANTINELOCKPICK)))) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING))) {
            context.ShowText("You have unlocked the hidden door!");
            context.ClearWall(context.Here, context.Facing);
        }
        else {
            context.ShowText("You detect a hidden door, but it is locked.");
            context.BlockWall(context.Here, context.Facing);
        }
    }
    else {
        context.BlockWall(context.Here, context.Facing);
    }
}

fun MapEvent03(context) {
    if (((context.UsedItem(ALFREDSHAT, ALFREDSHAT)) && (context.HasItem(WOODENLOCKPICK) || context.HasItem(BRASSLOCKPICK) || context.HasItem(IRONLOCKPICK) || context.HasItem(SILVERLOCKPICK) || context.HasItem(STEELLOCKPICK) || context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK))) || ((context.GetSkill(LOCKPICK_SKILL) >= 3) && ((context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) || (context.UsedItem(SILVERLOCKPICK, ADAMANTINELOCKPICK)))) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING))) {
        context.ShowText("You've picked the lock. Proceed.");
        context.ClearWall(context.Here, context.Facing);
    }
    else {
        context.BlockWall(context.Here, context.Facing);
        context.ShowText("Funny how an irksome little lock on a flimsy little door can keep out a big strong person like you.");
    }
}

fun MapEvent04(context) {
    if (context.GetFlag(PARTY, DID_FLEANCE) == 0) {
        if ((context.GetFlag(PARTY, TRACKING) == 0) && (context.GetFlag(ROOM, ONTRAIL) == 0)) {
            if ((context.UsedSkill(READ_TRACKS_SKILL) > 4) || context.UsedItem(HAWKSEYE, HAWKSEYE) || context.UsedItem(REINDEERHORNHELM, REINDEERHORNHELM) || context.UsedItem(TRACKINGTALISMAN, TRACKINGTALISMAN)) {
                context.ShowText("You are watching out for ambushes.");
                context.SetFlag(PARTY, TRACKING, 1);
                context.SetFlag(ROOM, ONTRAIL, 1);
            }
            else {
                if (context.GetFlag(PARTY, READYTOGO) == 0) {
                    context.SetFlag(PARTY, TRACKING, 0);
                    context.ShowText("AMBUSH!  Something ghostly and ghastly cast a fireball at you and then retreated!");
                    context.Damage(context.MaxHealth / 5);
                }
            }
        }
        else {
            if ((context.UsedSkill(READ_TRACKS_SKILL) > 4) || context.UsedItem(HAWKSEYE, HAWKSEYE) || context.UsedItem(REINDEERHORNHELM, REINDEERHORNHELM) || context.UsedItem(TRACKINGTALISMAN, TRACKINGTALISMAN)) {
                context.ShowText("Some faint tracks lure you onward.");
                context.SetFlag(ROOM, ONTRAIL, 1);
                context.SetFlag(PARTY, TRACKING, 1);
            }
            else {
                context.SetFlag(PARTY, TRACKING, 0);
                if ((context.UsedSkill(READ_TRACKS_SKILL) < 3) && (context.UsedSkill(READ_TRACKS_SKILL) >= 1)) {
                    context.ShowText("You find some marks, but you are not adequately skilled to correctly interpret them.");
                }
            }
        }
    }
}

fun MapEvent05(context) {
    context.Teleport(1, 1, 251, NORTH);
}

fun MapEvent06(context) {
    context.ShowText("This way to the Foyer of Cawdor.");
}

fun MapEvent07(context) {
    context.NoJoinZone();
    if (context.PartyCount > 1) {
        context.ShowText("You try squeezing down this narrow corridor, but it's so tight that - aargh!  You've been impaled on your companion's weapon!");
        context.Damage(context.MaxHealth);
    }
    else {
        if (context.GetFlag(DUNGEON, SEENGALATEA0401) == 0) {
            context.SetFlag(DUNGEON, SEENGALATEA0401, 1);
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("*");
            context.ShowPicture(LADYMACBETH);
            context.ShowText("Galatea greets you. 'My sisters oft frequent these higher levels.  Our chance of detection doth grow.");
            context.ShowText("As I wish that thou shalt come to end my unending life of drudgery, and to free those I have enslaved o'er the many centuries, I must hope that thou shalt grow wise in the ways of combat.  There is much to battle here.  I shall begin by rewarding thee in experience.'");
            context.ModExp(100000);
            if ((context.Guild == THIEF) && (context.GetSkill(ARCHERY_SKILL) == 0)) {
                context.ShowText("'I think me that proficiency with a bow will best serve thee now.'  You now know that skill!");
                context.ModSkill(ARCHERY_SKILL, 1);
            }
            if ((context.Guild == BARBARIAN) && (context.GetSkill(MARTIAL_ARTS_SKILL) == 0)) {
                context.ShowText("'Thou art, by thy nature, less proficient with tools and weapons of complexity.  An thou art to progress in combat ways, thou shouldst know of the simplest combat weapons, those of the martial artist.  Behold!'  You know the martial arts skill!");
                context.ModSkill(MARTIAL_ARTS_SKILL, 1);
            }
            if (((context.Guild == CLERIC) && (context.GetSkill(STAFF_SKILL) == 0))) {
                context.ShowText("'I think me thou art long past time to know the combat ways of quarterstaves.' You realize that you now know that skill!");
                context.ModSkill(STAFF_SKILL, 1);
            }
            if (((context.Guild == KNIGHT) || (context.Guild == WIZARD)) && (context.GetSkill(BARD_SKILL) == 0)) {
                context.ShowText("'As thou art naturally a leader, it is now time that thou dost know how to inflict confusion on thy enemies.  Behold!'  You now know the Bard skill!");
                context.ModSkill(BARD_SKILL, 1);
            }
            if ((context.Guild == RANGER) && (context.GetSkill(FURTIVENESS_SKILL) == 0)) {
                context.ShowText("'As thou art a woodsman, thou shouldst learn how to stalk thine foes, to increase the force of thy blows against them.' You know how to be furtive!");
                context.ModSkill(FURTIVENESS_SKILL, 1);
            }
            if (context.GetSkill(RUNE_READING_SKILL) == 0) {
                context.ShowText("'Some of thy gifts and rewards are hidden behind cloaks of repetition and drudgery, to deceive my less patient sisters.  Thou hast not explored fully the runed area of the Foyer, wherein a gift can be won, an thou art adequately patient.");
                context.ShowText("Use that gift in The Runed Room, where I have placed hints more obvious, an thou hast the skill to decipher them.'");
            }
            else {
                if (context.GetFlag(DUNGEON, BEENINRUNEDROOM) == 0) {
                    context.ShowText("'Thou mayst find my clues to thee in The Runed Room more direct, since my sisters lack the wit and wherewithal to decipher them.'");
                }
                else {
                    context.ShowText("'I hope that thou didst have the wisdom and patience to decipher the clues I had hidden for thee in The Runed Room, but an thou hast not, then thou shalt have to proceed using what means thou dost possess.'");
                }
            }
            context.ShowText("She smiles.  'Even the most casual stroll through Fleance's lair, aye, and all his undead brethren, can bring great reward.  So leave not the Ruins precipitously!'");
            context.ShowText("Galatea gets a distant look in her eyes.  'I dare no longer stay.  Good fortune!'  She disappears.");
        }
        else {
            if (context.GetFlag(DUNGEON, GFIGHT) == 0) {
                context.ShowText("It looks like someone is investigating your meeting with Galatea here earlier!");
                context.SetFlag(DUNGEON, GFIGHT, 1);
                context.GetMonster(1, 1);
                context.GetMonster(5, 1);
            }
        }
    }
}

fun MapEvent08(context) {
    context.NoJoinZone();
    context.SetFlag(DUNGEON, LEVEL2ROOM1, 1);
    if (context.PartyCount > 1) {
        context.ShowText("You try squeezing down this narrow corridor, but it's so tight that - aargh!  You've been impaled on your companion's weapon!");
        context.Damage(context.MaxHealth);
    }
    else {
        if (context.GetFlag(PARTY, NARROW) == 0) {
            context.SetFlag(PARTY, NARROW, 1);
            context.ShowText("This narrow corridor forces you to proceed single file.");
        }
        if ((context.GetFlag(DUNGEON, FOUGHTFLEANCE) == 0) && (context.GetFlag(PARTY, DID_FLEANCE) == 0)) {
            context.BlockWall(249, SOUTH);
            context.RemoveWallItem(249, SOUTH);
        }
        context.SetFlag(DUNGEON, WENTLEFT0401, 0);
        context.SetFlag(DUNGEON, WENTUP0401, 0);
    }
}

fun MapEvent09(context) {
    if ((context.GetFlag(DUNGEON, FOUGHTFLEANCE) == 1) || (context.GetFlag(PARTY, DID_FLEANCE) == 1)) {
        context.SetFlag(DUNGEON, FOUGHTFLEANCE, 1);
        context.Teleport(5, 2, 250, NORTH);
    }
    else {
        context.ShowText("Galatea's voice whispers, 'It is not safe to assay the next level leaving the Ghost of Fleance behind thee.'");
    }
}

fun MapEvent0A(context) {
    if ((context.PartyGuild(THIEF) && context.PartyGuild(RANGER)) || (context.GetFlag(DUNGEON, WONGAME) == 1) || (context.GetFlag(DUNGEON, LEVEL2ROOM2) == 1)) {
        context.ShowPicture(ELFRANGER);
        context.ShowText("'Two elves, a thief and a ranger by their appearance, courteously hold open a secret door for you.  'There is no harm in my holding the door open for you,' he says.");
        context.ClearWall(context.Here, context.Facing);
        context.PlaceWallItem(DOOR, context.Here, context.Facing);
        context.SetFlag(DUNGEON, WENTLEFT0401, 0);
        context.SetFlag(DUNGEON, WENTUP0401, 1);
        context.Teleport(4, 2, 253, NORTH);
    }
    else {
        if (context.GetFlag(PARTY, NORTHDOOR) == 1) {
            context.ShowText("Search though you may, you can not find the door that you know is right here!");
        }
    }
}

fun MapEvent0C(context) {
    if ((context.PartyGuild(BARBARIAN) && context.PartyGuild(RANGER)) || (context.PartyGuild(BARBARIAN) && context.PartyGuild(WIZARD)) || (context.PartyGuild(WIZARD) && context.PartyGuild(RANGER)) || (context.GetFlag(DUNGEON, WONGAME) == 1) || (context.GetFlag(DUNGEON, LEVEL2ROOM3) == 1)) {
        context.ShowPicture(ELFBARBARIAN);
        context.ShowText("'Two elves, a ranger and a barbarian by their appearance, courteously hold open a very thick door for you.  'There is no harm in our holding the door open for you,' they say.");
        context.ClearWall(context.Here, context.Facing);
        context.SetFlag(DUNGEON, WENTLEFT0401, 1);
        context.SetFlag(DUNGEON, WENTUP0401, 0);
        context.Teleport(4, 3, 207, WEST);
    }
    else {
        context.ShowText("Struggle though you will, the door to the Brewery will not open.");
    }
}

fun MapEvent0E(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.SetFlag(PARTY, WAR1, 1);
        context.ShowText("Ware!");
        context.SetBooty(HENGISTSSWORD, SMALLLETTEROFCREDIT, PETUNIAPOULTICE, 0, 0, 125);
        context.GetMonster(1, 25);
        context.GetMonster(5, 26);
        if (context.PartyCount > 2) {
            context.GetMonster(2, 25);
            context.GetMonster(6, 26);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 25);
            context.GetMonster(3, 25);
        }
    }
    else {
        context.ShowText("All that remains from your battle here is a badly abused magic wand.");
    }
}

fun MapEvent0F(context) {
    if (context.GetFlag(PARTY, WAR2) == 0) {
        context.SetFlag(PARTY, WAR2, 1);
        context.ShowText("The good news is these guys will have to bend down to hit you.  The bad news is that they are very flexible.");
        if (context.PartyCount > 3) {
            context.ShowText("In fact, it looks like a veritable dancing troop of damaging titans.");
        }
        context.SetBooty(0, 0, 0, 0, 0, 187);
        context.GetMonster(1, 27);
        context.GetMonster(2, 32);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 33);
            context.GetMonster(4, 34);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 33);
            context.GetMonster(6, 34);
        }
    }
    else {
        context.ShowText("All that remains from your battle here is a piece of scorched tutu.  Makes you wonder, doesn't it.");
    }
}

fun MapEvent10(context) {
    if (context.GetFlag(PARTY, WAR3) == 0) {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("At least you can tell that those brain pans can't possibly hold enough brains to know how to cast spells against you. ");
        context.SetBooty(ASCOMANNISPEAR, BOOMERANGSCROLL, PETUNIAPOULTICE, 0, 0, 125);
        context.GetMonster(1, 35);
        context.GetMonster(2, 36);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 36);
            context.GetMonster(4, 37);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 35);
            context.GetMonster(6, 37);
        }
    }
    else {
        context.ShowText("All that remains from your battle here is a broken club and a scrap of fur.");
    }
}

fun MapEvent11(context) {
    if (context.GetFlag(PARTY, WAR4) == 0) {
        context.SetFlag(PARTY, WAR4, 1);
        context.ShowText("Someone went to a lot of effort to defend this spot.");
        if (context.PartyCount > 3) {
            context.ShowText("This many golems is enough to make one glum.");
        }
        context.SetBooty(POLEARM, LEFTARMSCROLL, PETUNIAPOULTICE, 0, 0, 953);
        context.GetMonster(1, 29);
        context.GetMonster(5, 28);
        if (context.PartyCount > 2) {
            context.GetMonster(2, 29);
            context.GetMonster(6, 30);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 31);
            context.GetMonster(3, 31);
        }
    }
    else {
        context.ShowText("The frightening thought is not that someone can make such horrid humanoids.  The frightening thought is that they can give them spellcasting abilities.  You feel fortunate to have survived.");
    }
}

fun MapEvent12(context) {
    if (context.GetFlag(PARTY, WAR5) == 0) {
        context.SetFlag(PARTY, WAR5, 1);
        context.ShowText("'Tis a veritable gaggle of giants and gremlins.");
        context.SetBooty(PERSEUSSRING, EALSTANSCAP, MERLINSSUPPORT, 0, 0, 562);
        context.GetMonster(1, 27);
        context.GetMonster(5, 26);
        if (context.PartyCount > 2) {
            context.GetMonster(2, 27);
            context.GetMonster(6, 26);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 27);
            context.GetMonster(3, 26);
        }
    }
    else {
        context.ShowText("The bones that remain here are big or small, but none are sized in-between.");
    }
}

fun MapEvent13(context) {
    if (context.GetFlag(PARTY, WAR6) == 0) {
        context.SetFlag(PARTY, WAR6, 1);
        context.ShowText("It looks like you're facing the Picts of the litter.");
        context.SetBooty(WULFHERDSHELM, TRACKINGTALISMAN, WOODSMANSAXE, 0, 0, 125);
        context.GetMonster(1, 35);
        context.GetMonster(2, 36);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 35);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 36);
            context.GetMonster(5, 37);
        }
    }
    else {
        context.ShowText("This place was thoroughly depicted earlier.");
    }
}

fun MapEvent14(context) {
    if (context.GetFlag(PARTY, WAR7) == 0) {
        context.SetFlag(PARTY, WAR7, 1);
        context.ShowText("Oh my singed tailfeathers!  They got you from behind!");
        context.Damage(context.MaxHealth / 4);
        if (context.PartyCount > 3) {
            context.ShowText("And getting you from in front doesn't look much better, either.");
        }
        context.SetBooty(BINDINGTALISMAN, BLESSPOTION, CATHNESSSCLUB, REDTARTANCLOAK, 0, 125);
        context.GetMonster(1, 37);
        context.GetMonster(5, 28);
        if (context.PartyLevel(12)) {
            if (context.PartyCount > 2) {
                context.GetMonster(2, 37);
                context.GetMonster(6, 30);
            }
            if (context.PartyCount > 3) {
                context.GetMonster(4, 37);
                context.GetMonster(3, 28);
            }
        }
        else {
            if (context.PartyCount > 2) {
                context.GetMonster(2, 35);
                context.GetMonster(6, 30);
            }
            if (context.PartyCount > 3) {
                context.GetMonster(4, 31);
                context.GetMonster(3, 31);
            }
        }
    }
    else {
        context.ShowText("Your bones still ache from the battle you fought here.");
    }
}

fun MapEvent15(context) {
    var i;
    i = 0;
    var k;
    k = 0;
    i = context.GetFlag(PARTY, CTR);
    i++;
    k = i;
    if (k > 19) {
        k = (k - 20);
    }
    if (k > 14) {
        k = (k - 15);
    }
    if (k > 9) {
        k = (k - 10);
    }
    if (k > 4) {
        k = (k - 5);
    }
    if (k < 0) {
        k = 0;
    }
    if (k > 29) {
        k = 0;
    }
    if (i > 30) {
        i = 0;
    }
    context.SetFlag(PARTY, CTR, i);
    if ((i == 26) | (i == 20) | (i == 14) | (i == 8) | (i == 2)) {
        switch (k) {
            case 0:
                context.ShowText("You hear some footsteps running away.");
                break;
            case 1:
                context.ShowText("You hear someone running towards you.");
                context.ShowPicture(GREMLINTHIEF);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("A gargantuan gang of gremlins runs past you. One of them falls out and talks briefly.");
                context.ShowText("'Hide me!  Protect me!  Save me!  A press gang snapped me up and I cannot take any more of this!'");
                context.ShowText("A burly sergeant wraps a whip around the gremlin's neck, jerking him back into the squad.  You decide not to interfere.");
                break;
            case 2:
                context.ShowPicture(DRAGON);
                context.ShowText("The dragon examines you with a baleful eye.  It has seen better days.");
                context.ShowText("'Wouldst thou help a wyrm in need of a reviving morsel?  Thou hast two legs; surely thou couldst spare me one.  Wouldst thou resist my efforts to consume thee, then?  I feared so.  Were I not wounded, though...'  It limps off.");
                break;
            case 3:
                if (context.GetFlag(DUNGEON, SEENRORY) == 0) {
                    context.ShowPicture(HALFLINGTHIEF);
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("'I think we have met before.  In sooth, did I not offer thee some dragonish drachmas?  Howsomever, now that I am equipped with Brunanburh's bow I find my relationships with dragons much improved.  I doubt that the wyrms would say the same, though.'");
                    context.ShowText("The halfling struts off, smiling.");
                }
                else {
                    context.ShowText("It was here that you once met Rory Applebush.  You sigh deeply with the memory.");
                }
                break;
            case 4:
                context.ShowPicture(GREMLINTHIEF);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("A somewhat battered gang o'gremlins decides, rather insultingly, that they are bigger than you are.");
                context.SetBooty(SMALLLETTEROFCREDIT, LEFTARMSCROLL, 0, 0, 0, 93);
                context.GetMonster(1, 25);
                if (context.PartyCount > 1) {
                    context.GetMonster(5, 26);
                }
                if (context.PartyCount > 2) {
                    context.GetMonster(2, 25);
                    context.GetMonster(6, 26);
                }
                break;
        }
    }
}

fun MapEvent16(context) {
    if (context.GetFlag(PARTY, ELFWARNING) == 0) {
        context.SetFlag(PARTY, ELFWARNING, 1);
        context.ShowPicture(ELFCLERIC);
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("'She said thou wouldst be coming, but we must take care.  The walls have ears.  That said, I can only suggest that thou shouldst seek thy doom in the other rooms on this level, and to be as constant as a clock.'  With a wink and a nod, the elf departs.");
    }
}

fun MapEvent17(context) {
    if (context.PartyCount > 1) {
        context.BlockWall(context.Here, SOUTH);
        if ((context.Facing == SOUTH) || (context.GetFlag(PARTY, NARROW2) == 0)) {
            context.ShowText("The narrow corridor to the south forces you to enter it single file.");
            context.SetFlag(PARTY, NARROW2, 1);
        }
    }
    else {
        context.ClearWall(context.Here, SOUTH);
    }
}

fun MapEvent18(context) {
    if ((context.UsedSkill(READ_TRACKS_SKILL) > 3) || context.UsedItem(HAWKSEYE, HAWKSEYE) || context.UsedItem(REINDEERHORNHELM, REINDEERHORNHELM) || context.UsedItem(TRACKINGTALISMAN, TRACKINGTALISMAN)) {
        context.SetFlag(PARTY, TRACKING, 1);
        context.ShowText("You move vewwy vewwy quiet.  You found some twacks, hehehehehehe.");
    }
    else {
        if ((context.UsedSkill(READ_TRACKS_SKILL) < 4) && (context.UsedSkill(READ_TRACKS_SKILL) >= 1)) {
            context.ShowText("You find some marks, but you are not adequately skilled to correctly interpret them.");
        }
    }
}

fun MapEvent19(context) {
    context.NoJoinZone();
    if (context.PartyCount > 1) {
        context.ShowText("You try squeezing down this narrow corridor, but it's so tight that - aargh!  You've been impaled on your companion's weapon!");
        context.Damage(context.MaxHealth);
    }
}

fun MapEvent1A(context) {
    context.SetFlag(DUNGEON, LEVEL2ROOM1, 1);
}

fun MapEvent1B(context) {
    var i;
    if (context.GetFlag(PARTY, SEENGALMSG) == 0) {
        i = context.GetFlag(DUNGEON, GALLERYMESSAGES);
        i++;
        context.SetFlag(PARTY, SEENGALMSG, 1);
        context.ShowText("This appears to be what's left of a large picture gallery.  Many holes in the wall and piles of marble dust provide mute testimony to its ransacking.");
        if (i > 10) {
            i = 0;
        }
        else {
            switch (i) {
                case 1:
                    context.ShowText("Sometimes barbarians can be so barbaric!");
                    break;
                case 2:
                    context.ShowText("Obviously some civil libertarians were offended by all the pictures that were hung here.");
                    break;
                case 3:
                    context.ShowText("Whoever did this may not have known art, but they sure knew what they did not like!");
                    break;
                case 4:
                    context.ShowText("Considering that Monet won't be born for another six centuries, this was not a complete catastrophe.");
                    break;
                case 5:
                    context.ShowText("You find a portrait of the woman who posed for the Venus de Milo!  How about that!  She really had no arms!");
                    break;
                case 6:
                    context.ShowText("You find Rosetta's stone.  Sadly, Rosetta seems to have broken it against Edith's head.");
                    break;
                case 7:
                    context.ShowText("You find some pre-Columbian artifacts.  In fact, you yourself are a pre-Columbian artifact!");
                    break;
                case 8:
                    context.ShowText("Nine hundred years from now, this empty gallery with broken walls will be considered a classic example of destructionist art.");
                    break;
                case 9:
                    context.ShowText("You know, this would be a decent fixer upper if there were just more foot traffic.");
                    break;
                case 10:
                    context.ShowText("You find a post-it reminding someone to change the notation from mostly harmless to quite dangerous, actually.");
                    break;
            }
        }
        context.SetFlag(DUNGEON, GALLERYMESSAGES, i);
    }
}

fun MapEvent1C(context) {
    if ((context.GetFlag(PARTY, READYTOGO) == 1) || (context.GetFlag(ROOM, S28) == 1) || (context.HasItem(CRACKOFDOOM))) {
        context.ShowText("You see Fleance peering in at you, and charge!");
        context.Teleport(4, 1, 4, NORTH);
    }
    else {
        context.ClearWall(context.Here, context.Facing);
    }
}

fun MapEvent1D(context) {
    if ((context.GetFlag(PARTY, READYTOGO) == 1) || (context.GetFlag(ROOM, S29) == 1)) {
        context.ShowText("You see Fleance peering in at you, and charge!");
        context.Teleport(4, 1, 5, NORTH);
    }
    else {
        if (context.GetFlag(PARTY, TRACKING) == 1) {
            context.SetFlag(PARTY, READYTOGO, 1);
            if (!(context.PartyLevel(20))) {
                context.ShowText("You feel like you are being watched.");
                context.SetFlag(ROOM, S29, 1);
            }
            else {
                context.ClearWall(context.Here, context.Facing);
            }
        }
        else {
            context.ClearWall(context.Here, context.Facing);
        }
    }
}

fun MapEvent1E(context) {
    if ((context.GetFlag(PARTY, READYTOGO) == 1) || (context.GetFlag(ROOM, S30) == 1) || (context.GetFlag(DUNGEON, WONGAME) == 1)) {
        context.ShowText("Heck with bobbing and weaving.  You see Fleance peering in at you, and charge!");
        context.Teleport(4, 1, 5, NORTH);
    }
    else {
        if (context.GetFlag(PARTY, TRACKING) == 1) {
            context.ShowText("You bob and weave cautiously forward.");
            context.SetFlag(ROOM, S30, 1);
            context.SetFlag(PARTY, READYTOGO, 1);
        }
        else {
            context.ClearWall(context.Here, context.Facing);
        }
    }
}

fun MapEvent1F(context) {
    if ((context.GetFlag(PARTY, READYTOGO) == 1) || (context.GetFlag(ROOM, S31) == 1) || (context.GetFlag(DUNGEON, WONGAME) == 1)) {
        context.ShowText("You see Fleance's Ghost up ahead of you, and charge!");
        context.Teleport(4, 1, 6, NORTH);
    }
    else {
        if (context.GetFlag(PARTY, TRACKING) == 1) {
            context.ShowText("Wait for it.");
            context.SetFlag(ROOM, S31, 1);
            context.SetFlag(PARTY, READYTOGO, 1);
        }
        else {
            context.ShowText("You find something inscribed in blood above what appears to be a finger bone in the wall to the north.");
            context.ShowText("It reads, 'I sought Fleance'");
            context.ShowText("'But now I die'");
            context.ShowText("'Caught by ill chance'");
            context.ShowText("'With no Hawk's Eye.'");
        }
    }
}

fun MapEvent20(context) {
    if (context.GetFlag(PARTY, DID_FLEANCE) == 0) {
        context.ShowText("You knew this was coming.");
        context.SetFlag(PARTY, DID_FLEANCE, 1);
        context.SetBooty(PETUNIAPOULTICE, ELDERBERRYELIXIR, 0, 0, 0, 1988);
        context.GetMonster(1, 38);
        context.GetMonster(2, 37);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 36);
            context.GetMonster(4, 35);
            if (context.PartyCount > 3) {
                context.GetMonster(5, 31);
                context.GetMonster(6, 31);
            }
        }
    }
    else {
        context.SetFlag(DUNGEON, FOUGHTFLEANCE, 1);
        context.ShowText("It appears that your moves were fancier than Fleance's.");
    }
}

fun MapEvent21(context) {
    if (context.GetFlag(PARTY, DID_FLEANCE) == 0) {
        context.ShowText("You knew this was coming.");
        context.SetFlag(PARTY, DID_FLEANCE, 1);
        context.SetBooty(PETUNIAPOULTICE, ELDERBERRYELIXIR, 0, 0, 0, 1988);
        context.GetMonster(1, 39);
        context.GetMonster(2, 37);
        context.GetMonster(3, 36);
        if (context.PartyCount > 2) {
            context.GetMonster(4, 35);
            context.GetMonster(5, 31);
            if (context.PartyCount > 3) {
                context.GetMonster(6, 31);
            }
        }
    }
    else {
        context.SetFlag(DUNGEON, FOUGHTFLEANCE, 1);
        context.ShowText("It appears that your moves were fancier than Fleance's.");
    }
}

fun MapEvent22(context) {
    if (context.GetFlag(PARTY, DID_FLEANCE) == 0) {
        context.ShowText("You knew this was coming.");
        context.SetFlag(PARTY, DID_FLEANCE, 1);
        context.SetBooty(PETUNIAPOULTICE, ELDERBERRYELIXIR, 0, 0, 0, 1988);
        context.GetMonster(1, 40);
        context.GetMonster(2, 37);
        context.GetMonster(3, 36);
        context.GetMonster(4, 35);
        if (context.PartyCount > 2) {
            context.GetMonster(5, 31);
            context.GetMonster(6, 31);
        }
    }
    else {
        context.SetFlag(DUNGEON, FOUGHTFLEANCE, 1);
        context.ShowText("It appears that your moves were fancier than Fleance's.");
    }
}

fun MapEvent23(context) {
    context.SetFlag(PARTY, DID_FLEANCE, 1);
}

fun MapEvent24(context) {
    if (context.GetFlag(PARTY, GOTFLEANCELOOT) == 0) {
        context.GiveItem(CROWNOFCRIMSON);
        context.GiveItem(PETUNIAPOULTICE);
        context.GiveItem(ELDERBERRYELIXIR);
        context.SetFlag(DUNGEON, FOUGHTFLEANCE, 1);
        context.SetFlag(PARTY, GOTFLEANCELOOT, 1);
        context.ShowText("You find some useful things in Fleance's lair.");
    }
    else {
        context.ShowText("This part of Fleance's lair is empty.  Almost too empty.  Well, okay, you're here, so it's not too empty.");
    }
}
