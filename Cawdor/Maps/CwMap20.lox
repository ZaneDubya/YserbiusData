#include "defines.loh"
#include "flags.loh"

#define DETECTED_DOOR 1
#define WAR1 1
#define WAR2 2
#define WAR3 3
#define WAR4 4
#define WAR5 5
#define WAR6 6
#define WAR7 7
#define CTR 8
#define TRACKING 9
#define SAWMACDUFF 10
#define SAWTHRONE 11
#define SAWTROLL 12
#define SAWCIVILSERVANT 13
#define SEENTROLL 14

fun MapEvent01(context) {
    context.ShowText("A cold breeze sends shivers down your spine.");
    if (context.UsedSkill(DETECT_SKILL) >= 11 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS) || context.IsFlagOn(ROOM, DETECTED_DOOR)) {
        context.SetWallItem(DOOR, context.GetTile, context.GetFacing);
        context.ShowText("You've uncovered a hidden door!");
        context.ClearWallBlock(context.GetTile, context.GetFacing);
    }
    else {
        context.SetWallBlock(context.GetTile, context.GetFacing);
        context.ClearWallItem(context.GetTile, context.GetFacing);
    }
}

fun MapEvent02(context) {
    if (context.UsedSkill(DETECT_SKILL) >= 11 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS) || context.IsFlagOn(ROOM, DETECTED_DOOR)) {
        context.SetWallItem(DOOR, context.GetTile, context.GetFacing);
        context.SetFlag(ROOM, DETECTED_DOOR, 1);
        if (((context.UsedItem(ALFREDSHAT, ALFREDSHAT)) && (context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK))) || ((context.GetSkillLevel(LOCKPICK_SKILL) >= 10) && (context.UsedItem(COLDSTEELLOCKPICK, ADAMANTINELOCKPICK))) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING))) {
            context.ShowText("You have unlocked the hidden door!");
            context.ClearWallBlock(context.GetTile, context.GetFacing);
        }
        else {
            context.SetWallBlock(context.GetTile, context.GetFacing);
            if (context.UsedItem(WOODENLOCKPICK, BRASSLOCKPICK)) {
                context.TakeItem(WOODENLOCKPICK);
                context.TakeItem(BRASSLOCKPICK);
                context.ShowText("Your lockpick is no more.  It has ceased to key.  It's a stick.  Bereft of heft, it rests in pieces.  This is an ex-lockpick.");
            }
            else {
                context.SetWallBlock(context.GetTile, context.GetFacing);
                context.ShowText("You detect a hidden door, but it is locked.");
            }
        }
    }
    else {
        context.SetWallBlock(context.GetTile, context.GetFacing);
    }
}

fun MapEvent03(context) {
    if (((context.UsedItem(ALFREDSHAT, ALFREDSHAT)) && (context.HasItem(SILVERLOCKPICK) || context.HasItem(STEELLOCKPICK) || context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK))) || ((context.GetSkillLevel(LOCKPICK_SKILL) >= 9) && ((context.UsedItem(SILVERLOCKPICK, ADAMANTINELOCKPICK))) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING)))) {
        context.ShowText("That was a stiff lock, but you finally got it open.");
        context.ClearWallBlock(context.GetTile, context.GetFacing);
    }
    else {
        context.SetWallBlock(context.GetTile, context.GetFacing);
        if (context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) {
            context.TakeItem(WOODENLOCKPICK);
            context.TakeItem(BRASSLOCKPICK);
            context.TakeItem(IRONLOCKPICK);
            context.ShowText("Your lockpick is no more.  It has ceased to key.  It's a stick.  Bereft of heft, it rests in pieces.  This is an ex-lockpick.");
        }
        else {
            context.SetWallBlock(context.GetTile, context.GetFacing);
            context.ShowText("Funny how an irksome little lock on a flimsy little door can keep out a big strong person like you.");
        }
    }
}

fun MapEvent04(context) {
    if ((context.UsedSkill(READ_TRACKS_SKILL) >= 11) || context.UsedItem(TRACKINGTALISMAN, TRACKINGTALISMAN)) {
        context.ShowText("You find some tracks indicating that something headed off this way.");
        context.SetFlag(PARTY, TRACKING, 1);
    }
}

fun MapEvent05(context) {
    var i;
    i = 0;
    var k;
    k = 0;
    i = context.GetFlag(PARTY, CTR);
    i++;
    k = i;
    if (k > 19) {
        k = (k - 20);
    }
    if (k > 14) {
        k = (k - 15);
    }
    if (k > 9) {
        k = (k - 10);
    }
    if (k > 4) {
        k = (k - 5);
    }
    if (k < 0) {
        k = 0;
    }
    if (k > 29) {
        k = 0;
    }
    if (i > 30) {
        i = 0;
    }
    context.SetFlag(PARTY, CTR, i);
    if ((i == 26) | (i == 20) | (i == 14) | (i == 8) | (i == 2)) {
        switch (k) {
            case 0:
                context.ShowText("You hear some footsteps running away.");
                break;
            case 1:
                context.ShowText("You hear someone running towards you.");
                context.ShowPortrait(TROLLKNIGHT);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("A comely lady approaches.");
                context.ShowText("'Hast thou found the herd of unicorns?  There must be a large herd to generate so many unicorn horn helms?  Why dost thou snigger so?  Dost thou suggest I am not adequately pure to find a unicorn?'");
                context.ShowText("Examining the way she easily handles her claymore, you stifle your snickers and assure here that she is purity personified.");
                break;
            case 2:
                context.ShowPortrait(DRAGON);
                context.ShowText("'Woe betides me!  I have lost my good cousin.  I have been told that she is here, or in the Aerie, but when I seek her here I am told she is there, and there here.  Knowest thou where Ermintrude Wyrm hast been seen?'");
                context.ShowText("You don't know, but you tell the dragon that you will relay the message if you see her.  ");
                break;
            case 3:
                if (context.GetFlag(DUNGEON, SEENRORY) == 1) {
                    context.ShowText("Why is it that Macduff's shade can still walk here, but Rory's can not?");
                }
                else {
                    context.ShowPortrait(HALFLINGTHIEF);
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("'Ah, friends.  This is indeed a place for the likes of me, what with its many secrets and even more locks.  I have heard that one may even find an adamantine lockpick nearabouts.");
                    context.ShowText("But keep alert!  Macduff's shade haunts the south west corner.  Of course, I was too stealthy to be caught by him.");
                    context.ShowText("Rory struts off, smiling.");
                }
                break;
            case 4:
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("Do you know how you can tell the difference between Scottish and English reivers?  Why are you bothering when they are attacking!");
                context.SetTreasure(GREATLETTEROFCREDIT, METHUSELAHSSCROLL, 0, 0, 0, 493);
                context.AddEncounter(1, 25);
                if (context.PartyCount > 25) {
                    context.AddEncounter(5, 25);
                }
                if (context.PartyCount > 2) {
                    context.AddEncounter(2, 25);
                    context.AddEncounter(6, 25);
                }
                break;
        }
    }
}

fun MapEvent06(context) {
    context.ShowText("A cold breeze sends shivers down your spine.");
}

fun MapEvent07(context) {
    if (context.PartyCount > 1) {
        context.ShowText("The doorway is so narrow that it forces you to pass it single file.");
    }
    else {
        context.ShowText("You take the stairs down one level.");
        context.Teleport(6, 3, 249, NORTH);
    }
}

fun MapEvent08(context) {
    context.NoJoinZone();
    if ((context.GetFlag(DUNGEON, LEVEL5ROOM1) == 0) && (context.GetFlag(DUNGEON, FOUGHTMACDUFF) == 0) && (context.GetFlag(PARTY, SAWMACDUFF) == 0)) {
        context.SetFlag(DUNGEON, LEVEL5ROOM1, 1);
        context.ShowText("You suddenly feel better, as if someone were helping you from afar.");
        context.HealPlayer(context.GetMaxHealth);
    }
}

fun MapEvent09(context) {
    if (context.GetFlag(PARTY, SAWMACDUFF) == 0) {
        if (context.HasItem(CUPOFDROWNING)) {
            context.Teleport(8, 2, 235, EAST);
        }
        else {
            if (context.CheckPartyLevel(30)) {
                context.Teleport(8, 2, 251, EAST);
            }
            else {
                context.Teleport(8, 2, 250, EAST);
            }
        }
    }
    else {
        context.Teleport(8, 2, 234, EAST);
    }
}

fun MapEvent0A(context) {
    if (context.GetFlag(DUNGEON, FOUGHTMACDUFF) == 0) {
        context.SetFlag(PARTY, SAWMACDUFF, 1);
        context.SetFlag(DUNGEON, FOUGHTMACDUFF, 1);
        context.DamagePlayer(context.GetMaxHealth / 3);
        context.ShowText("You are being ambushed by Macduff's ghost!");
        context.ShowText("'Hah!  I knew that meddlesome witch would betray herself here!  Yield thee, coward, and live to be the show and gaze o' the time.  Else within my sword's reach set thee; if thou 'scape, hell forgive me too!'");
        context.ShowText("You know, them's fighting words.  You attack!");
        context.SetFlag(PARTY, SAWMACDUFF, 1);
        if (context.HasItem(CUPOFDROWNING)) {
            context.SetTreasure(MACDUFFSMAUL, PALACECHALICE, DRAGONFLAGON, BEGGARSROBES, 0, 2925);
            context.AddEncounter(1, 37);
            context.AddEncounter(5, 38);
        }
        else {
            if (context.CheckPartyLevel(30)) {
                context.SetTreasure(MACDUFFSMAUL, PALACECHALICE, DRAGONFLAGON, BEGGARSROBES, 0, 2925);
                context.AddEncounter(1, 31);
                context.AddEncounter(5, 40);
            }
            else {
                context.SetTreasure(MACDUFFSMAUL, PALACECHALICE, DRAGONFLAGON, BEGGARSROBES, 0, 2925);
                context.AddEncounter(1, 29);
                context.AddEncounter(5, 39);
            }
        }
    }
}

fun MapEvent0B(context) {
    if (context.GetFlag(PARTY, SAWMACDUFF) == 0) {
        context.SetFlag(PARTY, SAWMACDUFF, 2);
        context.SetFlag(DUNGEON, FOUGHTMACDUFF, 1);
        context.ShowText("This time you have got the drop on Macduff's Ghost!");
        context.AddEncounter(1, 37);
        context.AddEncounter(5, 38);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 8);
            context.AddEncounter(6, 8);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(3, 8);
            context.AddEncounter(4, 8);
        }
    }
    else {
        context.ShowText("The carnage from your epic battle with the mighty Macduff is scattered over this entire area.");
    }
}

fun MapEvent0C(context) {
    if (context.GetFlag(PARTY, SAWMACDUFF) == 0) {
        context.SetFlag(PARTY, SAWMACDUFF, 2);
        context.SetFlag(DUNGEON, FOUGHTMACDUFF, 1);
        context.ShowText("This time you have got the drop on Macduff's Ghost!");
        context.AddEncounter(1, 29);
        context.AddEncounter(5, 39);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 5);
            context.AddEncounter(6, 5);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(3, 5);
            context.AddEncounter(4, 5);
        }
    }
    else {
        context.ShowText("The carnage from your epic battle with the mighty Macduff is scattered over this entire area.");
    }
}

fun MapEvent0D(context) {
    if (context.GetFlag(PARTY, SAWMACDUFF) == 0) {
        context.SetFlag(PARTY, SAWMACDUFF, 2);
        context.SetFlag(DUNGEON, FOUGHTMACDUFF, 1);
        context.ShowText("This time you have got the drop on Macduff's Ghost!");
        context.AddEncounter(1, 31);
        context.AddEncounter(5, 40);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 7);
            context.AddEncounter(6, 7);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(3, 7);
            context.AddEncounter(4, 7);
        }
    }
    else {
        context.ShowText("The carnage from your epic battle with the mighty Macduff is scattered over this entire area.");
    }
}

fun MapEvent0E(context) {
    if (context.GetFlag(PARTY, SAWTHRONE) == 0) {
        context.SetFlag(PARTY, SAWTHRONE, 1);
        context.ShowText("This is an enormous throne room with only two obvious doors, one each on the north and south walls.");
        context.ShowText("If the folks who built Cawdor Keep had the cautious minds typical of their countrymen, there will be many secret doors hidden from which guards could strike swiftly against invaders.");
    }
    else {
        context.ShowText("Every time you see the throne room you are impressed.");
    }
}

fun MapEvent0F(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.SetFlag(PARTY, WAR1, 1);
        context.ShowText("A large mixed motley group claims to be the 'official' bailiffs of this hall.  They start arguing about which of your goods to confiscate for trespass, and decide instead to simply apply 'Jeddart' justice.");
        context.ShowText("Which is to say, kill you first and then quibble about your goods!");
        context.SetTreasure(BRUNANBURHBOW, WOADWINE, LAVENDERLOTION, 0, 0, 847);
        context.AddEncounter(1, 27);
        context.AddEncounter(5, 28);
        if (context.PartyCount > 1) {
            context.AddEncounter(2, 34);
            context.AddEncounter(6, 26);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(4, 34);
            context.AddEncounter(3, 34);
        }
    }
    else {
        context.ShowText("'Justice was served,' you think to yourself, as you observe the remains of the 'bailiffs.'");
    }
}

fun MapEvent10(context) {
    if (context.GetFlag(PARTY, WAR2) == 0) {
        context.SetFlag(PARTY, WAR2, 1);
        context.ShowText("A friendly group of giants smiles down at you.");
        context.ShowText("I guess if you were hungry and dinner came strolling up, you would smile too.");
        context.SetTreasure(EALSTANSABSORBER, WOADWINE, DRAGONFLAGON, 0, 0, 447);
        context.AddEncounter(1, 32);
        context.AddEncounter(2, 33);
        if (context.PartyCount > 2) {
            context.AddEncounter(5, 32);
            context.AddEncounter(6, 33);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(4, 32);
            context.AddEncounter(3, 33);
        }
    }
    else {
        context.ShowText("All that remains of your battle here is the crushed remains of a silver hand.");
        context.ShowText("Now that you mention it, Cawdor sure has one heck of an efficient set of scavengers, doesn't it!");
    }
}

fun MapEvent11(context) {
    if (context.GetFlag(PARTY, WAR3) == 0) {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("The people who ruled here must have been real pigs.  In fact, here come some of their descendants!");
        if (context.PartyCount > 3) {
            context.ShowText("If you could only learn to drive pigs like these before you, like the swineherding spellcasters in back, you'd have a lot easier time with battles.");
        }
        context.SetTreasure(CLAYMORE, WOADWINE, LAVENDERLOTION, 0, 0, 839);
        context.AddEncounter(1, 30);
        context.AddEncounter(2, 30);
        if (context.PartyCount > 2) {
            context.AddEncounter(4, 30);
            context.AddEncounter(3, 30);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(5, 25);
            context.AddEncounter(6, 25);
        }
    }
    else {
        context.ShowText("All that remains of your battle here is a fractured tusk and a splintered staff.");
    }
}

fun MapEvent12(context) {
    if (context.GetFlag(PARTY, WAR4) == 0) {
        context.SetFlag(PARTY, WAR4, 1);
        context.ShowText("The people who ruled here must have been real pigs.  In fact, here come some of their descendants!");
        if (context.PartyCount > 3) {
            context.ShowText("If you could only learn to drive pigs like these before you, like the swineherding spellcasters in back, you'd have a lot easier time with battles.");
        }
        context.SetTreasure(WULFHERDSSTAFF, 0, 0, 0, 0, 212);
        context.AddEncounter(1, 30);
        context.AddEncounter(2, 30);
        if (context.PartyCount > 2) {
            context.AddEncounter(4, 30);
            context.AddEncounter(3, 30);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(5, 25);
            context.AddEncounter(6, 25);
        }
    }
    else {
        context.ShowText("All that remains of your battle here is a fractured tusk and a splintered staff.");
    }
}

fun MapEvent13(context) {
    if (context.GetFlag(PARTY, WAR5) == 0) {
        context.SetFlag(PARTY, WAR5, 1);
        context.ShowText("With all the secret and locked doors in here, you knew it was just a matter of time before you ran into some halfling thieves.");
        if (context.GetFlag(PARTY, TRACKING) == 1) {
            context.ShowText("It's a good thing you were looking for them.");
        }
        else {
            context.ShowText("It's a shame you weren't looking for them.");
            context.DamagePlayer(context.GetMaxHealth / 3);
        }
        if (context.PartyCount > 3) {
            context.ShowText("Groups this large are easy to spot.");
        }
        context.SetTreasure(WULFHERDSSTAFF, GALLOFGOAT, 0, 0, 0, 212);
        context.AddEncounter(1, 35);
        context.AddEncounter(2, 24);
        context.AddEncounter(3, 34);
        if (context.PartyCount > 2) {
            context.AddEncounter(4, 24);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(5, 34);
            context.AddEncounter(6, 35);
        }
    }
    else {
        context.ShowText("All that remains of your battle here is a broken toe-nail and a pipe full of weed.");
        context.ShowText("Don't worry.  Cyberweed is not a controlled substance, and in cyberspace there's no such thing as second hand smoke.");
    }
}

fun MapEvent14(context) {
    context.SetFlag(PARTY, TRACKING, 0);
}

fun MapEvent15(context) {
    if (context.GetFlag(PARTY, WAR6) == 0) {
        context.SetFlag(PARTY, WAR6, 1);
        context.ShowText("The good news is that dragons rarely travel in pairs.  The bad news is that these dragons are travelling in packs of three!");
        context.SetTreasure(UNICORNHORNHELM, WOADWINE, DRAGONFLAGON, 0, 0, 9000);
        context.AddEncounter(1, 36);
        context.AddEncounter(5, 36);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 36);
            context.AddEncounter(6, 36);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(3, 36);
            context.AddEncounter(4, 36);
        }
    }
    else {
        context.ShowText("Some days the dragon wins.  This wasn't one of them.");
    }
}

fun MapEvent16(context) {
    if (context.GetFlag(PARTY, WAR7) == 0) {
        context.SetFlag(PARTY, WAR7, 1);
        context.ShowText("The good news is that there is not an actual king on the throne here.  The bad news is that it's a bunch of those thrice bedratted halflings with an ambush all arranged!");
        context.DamagePlayer(context.GetMaxHealth / 3);
        context.SetTreasure(ALCUINSRING, LAVENDERLOTION, PALACECHALICE, 0, 0, 1647);
        context.AddEncounter(1, 35);
        context.AddEncounter(2, 34);
        context.AddEncounter(5, 35);
        if (context.PartyCount > 2) {
            context.AddEncounter(4, 34);
            context.AddEncounter(3, 35);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(6, 35);
        }
    }
    else {
        context.ShowText("Your battle here proved the old adage: 'You can never hold a throne if your feet don't reach the floor.'");
    }
}

fun MapEvent17(context) {
    context.Teleport(10, 1, 251, NORTH);
}

fun MapEvent18(context) {
    context.Teleport(11, 1, 111, WEST);
}

fun MapEvent19(context) {
    if (context.GetFlag(PARTY, SEENTROLL) == 0) {
        context.SetFlag(PARTY, SEENTROLL, 1);
        context.ShowPortrait(TROLLRANGER);
        context.GiveItem(ADAMANTINELOCKPICK);
        if (context.GetFlag(PARTY, SAWMACDUFF) == 0) {
            context.ShowText("'Huzzah for thy masterful turn of arms against Macduff's shade.  I will permit myself a smidgeon of hope that at last the evil that resides herein may be ended.");
            context.ShowText("Now attend!  Macbeth's Ghost dost reside in the Aerie, surrounded by all manners of flying beasts, including flying undead.  The undying also greatly inhabit Astrologia and Alchemia.");
            context.ShowText("May thy sword arm never tire!'");
            context.ShowText("He departs.");
        }
        else {
            context.ShowText("'Hist!  Attend!  I have little time.  Macbeth's Ghost dost reside in the Aerie, surrounded by all manners of flying beasts, including several undead.  And flying undying also greatly inhabit Astrologia and Alchemia.");
            context.ShowText("May thy sword arm never tire.'");
            context.ShowText("He departs.");
        }
    }
}

fun MapEvent1A(context) {
    context.ShowPortrait(HUMANBARBARIAN);
    context.ShowText("The plaque reads: 'Here be Evilwillit Armstrong, wanted for stealing two oxen, one young and one mature milk cow, six chickens, a brace of ducks, a fine nanny and her kid, thirty-five ewes, one ram...");
    context.ShowText("... a workable feather mattress, a good iron skillet, a long wooden spoon, and several unpermissioned kisses from Laird-give-me-little Eliot and her eldest daughter Sweet-milk.'");
}

fun MapEvent1B(context) {
    context.ShowPortrait(ORCBARBARIAN);
    context.ShowText("The plaque reads: 'Here be Bangtail Bobby Bell.  On the charge fyled against her of stealing three horses from Skinabake Armstrong she has been found foul conditionally.'");
}

fun MapEvent1C(context) {
    context.ShowPortrait(ELFBARBARIAN);
    context.ShowText("The plaque reads: 'This be Laird-give-me-little Eliot, found guilty of overswearing to the amount of twenty-nine sheep.'");
}

fun MapEvent1D(context) {
    context.ShowPortrait(GNOMEBARBARIAN);
    context.ShowText("The plaque reads: 'This be Curst Clem Croser, found guilty of kidnapping and holding for ransom Wanton Sim Scott.'");
}

fun MapEvent1E(context) {
    context.ShowPortrait(HALFLINGCLERIC);
    context.ShowText("The plaque reads: 'This be David-no-good-priest Armstrong, found guilty of failure to light his beacon at night while the Carleton's were reiving.'");
}

fun MapEvent1F(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'This be Winking Warren Scott, found guilty of playing tables with false dice.");
}

fun MapEvent20(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'This be Curst Conan Burns, found guilty of using Black Magics and cheating at cards.'");
}

fun MapEvent21(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'This be Winking Sean Wilkinson, found guilty of abusing and ill-using Sore John Graham's spades.'");
}

fun MapEvent22(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'This be Winking William Musgrave, found guilty of sharping, gulling, and gambling on chess.'");
}

fun MapEvent23(context) {
    context.ShowPortrait(DWARFWIZARD);
    context.ShowText("The plaque reads: 'This be Winking Cynthia Turner, found guilty of balderdash in the first degree.'");
}

fun MapEvent24(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'This be Winking Stephen Laidlaw, found guilty of abuse of bagels.'");
}

fun MapEvent25(context) {
    context.ShowPortrait(DWARFWIZARD);
    context.ShowText("The plaque reads: 'This be Winking Jeanne Burns, found guilty of overindulgence in cards.'");
}

fun MapEvent26(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'This be Winking George Matthews, found guilty of crimes too numerous to mention.'");
}

fun MapEvent27(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'Here be Winking Dicky Armstrong, found guilty of abuse of poetic license.'");
}

fun MapEvent28(context) {
    context.ShowPortrait(HUMANTHIEF);
    context.ShowText("The plaque reads: 'Here be Winking Gloria Graham, found guilty of animal husbandry.'");
}

fun MapEvent29(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'Here be Winking Timothy Irvine, found guilty of consorting with undead.'");
}

fun MapEvent2A(context) {
    context.ShowPortrait(HUMANTHIEF);
    context.ShowText("The plaque reads: 'Here be Winking Claudia Nixon, found guilty of cavorting with monsters.'");
}

fun MapEvent2B(context) {
    context.ShowPortrait(HUMANWIZARD);
    context.ShowText("The plaque reads: 'Here be Winking Danny Robson, found guilty of poaching insects.'");
}

fun MapEvent2C(context) {
    context.ShowText("The carnage from your epic battle with the mighty Macduff is scattered over this entire area.");
    if (context.GetFlag(PARTY, SAWMACDUFF) == 2) {
        context.GiveItem(MACDUFFSMAUL);
        context.GiveItem(BEGGARSROBES);
        context.GiveItem(PALACECHALICE);
        context.GiveItem(DRAGONFLAGON);
        context.ShowText("And a few goodies, too!");
    }
    context.SetFlag(PARTY, SAWMACDUFF, 1);
}

fun MapEvent2D(context) {
    if (context.GetFlag(PARTY, SAWCIVILSERVANT) == 0) {
        context.SetFlag(PARTY, SAWCIVILSERVANT, 1);
        context.ShowPortrait(GNOMEWIZARD);
        context.ShowText("'Good gentle, couldst assist a humble servant of his majesty's office of assizes?  Upon our plans we show one higher level than this, and yet I can find no stairs!'");
        context.ShowText("You know of no stairs either, and tell him so.  In fact, judging from the windows, this is the top floor.");
        context.ShowText("'Certes, they are upon my charts and papers, so they must be here somewhere.  Forgive my interruption.'  He goes back to searching the wall.");
    }
}

fun MapEvent2F(context) {
    context.ShowText("There sure are a lot of stairs here!");
}
