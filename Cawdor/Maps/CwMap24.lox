#include "defines.loh"
#include "flags.loh"

#define DETECTED_DOOR 1
#define ARRIVED_HERE 2
#define WAR1 5
#define WAR2 6
#define WAR3 7
#define WAR4 8
#define WAR5 9
#define WAR6 10
#define WAR7 11
#define CTR 12
#define TRACKING 13
#define WHATFIGHT 14
#define MOREBOAR 15
#define MORESLIME 16
#define MOREPANTHER 17
#define MOREDOG 18
#define MOREBAT 19
#define MOREHARPY 20
#define MOREMINOTAUR 21
#define MOREMEDUSA 22
#define USEDPRUNES 23
#define GOTMESSAGE 24
#define LANTERNMESSAGE 25

fun MapEvent02(context) {
    if (context.UsedSkill(DETECT_SKILL) > 11 || context.UsedSpell(TRUE_SEEING_SPELL) || context.FlagOn(ROOM, DETECTED_DOOR)) {
        context.PlaceWallItem(PORTAL, context.Here, context.Facing);
        context.SetFlag(ROOM, DETECTED_DOOR, 1);
        if (((context.UsedSkill(LOCKPICK_SKILL) > 11) && (context.HasItem(COLDSTEELLOCKPICK) || context.HasItem(ADAMANTINELOCKPICK))) || ((context.GetSkill(LOCKPICK_SKILL) > 11) && (context.UsedItem(COLDSTEELLOCKPICK, ADAMANTINELOCKPICK)))) {
            context.ShowText("You have unlocked the hidden door.");
            context.ClearWall(context.Here, context.Facing);
        }
        else {
            context.BlockWall(context.Here, context.Facing);
            context.ShowText("You detect a hidden door, but it is locked.");
            if ((context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) || (context.UsedItem(SILVERLOCKPICK, STEELLOCKPICK))) {
                context.TakeItem(WOODENLOCKPICK);
                context.TakeItem(BRASSLOCKPICK);
                context.TakeItem(IRONLOCKPICK);
                context.TakeItem(SILVERLOCKPICK);
                context.TakeItem(STEELLOCKPICK);
                context.ShowText("Your lockpick is no more.  It has ceased to key.  It's a stick.  Bereft of heft, it rests in pieces.  This is an ex-lockpick.");
            }
        }
    }
    else {
        context.BlockWall(context.Here, context.Facing);
    }
}

fun MapEvent04(context) {
    context.ShowText("You return to The Runed Room.");
    context.Teleport(1, 2, 159, WEST);
}

fun CheckMap(context) {
    var i;
    if (!(context.HasItem(LANTERN))) {
        if (context.HasItem(BRIEFCANDLE)) {
            i = (context.GetFlag(DUNGEON, CANDLECOUNTER));
            i++;
            if (i > 10) {
                context.SetFlag(DUNGEON, CANDLECOUNTER, 0);
                context.TakeItem(BRIEFCANDLE);
                context.ShowText("Out out, brief candle.  Light's but a making shadow; a poor photon, that glints and flashes its hour upon the gaze, and then is seen no more.");
                context.ShowText("In other words, it got dark.");
            }
            else {
                context.ShowText("Your sputtering little candle provides barely enough illumination, but it won't last forever.");
                context.SetFlag(DUNGEON, CANDLECOUNTER, i);
            }
        }
        else {
            context.NoMaps();
            context.ShowText("It sure is dark down here.  There's no way you'll be able to spot an ambush or protect yourself fully while it's so dark.  In fact, yup, that hurt!");
            context.Damage(500);
        }
    }
    else {
        if (context.GetFlag(PARTY, LANTERNMESSAGE) == 0) {
            context.ShowText("Darn useful items, these lanterns.  Getting one was a bright idea.");
            context.SetFlag(PARTY, LANTERNMESSAGE, 1);
        }
        if (context.GetFlag(DUNGEON, LANTERNREWARD) == 0) {
            context.SetFlag(DUNGEON, LANTERNREWARD, 1);
            context.ModExp(600000);
        }
    }
    if (context.UsedItem(THEPRUNESOFCAWDOR, THEPRUNESOFCAWDOR)) {
        context.SetFlag(PARTY, USEDPRUNES, 1);
    }
    else {
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
}

fun MapEvent07(context) {
    CheckMap(context);
}

fun MapEvent08(context) {
    var i;
    if (!(context.HasItem(LANTERN))) {
        if (context.HasItem(BRIEFCANDLE)) {
            i = (context.GetFlag(DUNGEON, CANDLECOUNTER));
            i++;
            if (i > 10) {
                context.SetFlag(DUNGEON, CANDLECOUNTER, 0);
                context.TakeItem(BRIEFCANDLE);
                context.ShowText("Out out, brief candle.  Light's but a making shadow; a poor photon, that glints and flashes its hour upon the gaze, and then is seen no more.");
                context.ShowText("In other words, it got dark.");
            }
            else {
                context.ShowText("Your sputtering little candle provides barely enough illumination, but it won't last forever.");
                context.SetFlag(DUNGEON, CANDLECOUNTER, i);
            }
        }
        else {
            context.NoMaps();
            context.ShowText("It sure is dark down here.");
        }
    }
    else {
        if (context.GetFlag(PARTY, LANTERNMESSAGE) == 0) {
            context.ShowText("Darn useful items, these lanterns.");
            context.SetFlag(PARTY, LANTERNMESSAGE, 1);
        }
        if (context.GetFlag(DUNGEON, LANTERNREWARD) == 0) {
            context.SetFlag(DUNGEON, LANTERNREWARD, 1);
            context.ModExp(600000);
            context.ShowText("In fact, you deserve a reward for thinking of it.");
        }
    }
}

fun Quiet(context) {
    context.ShowText("This room is empty.  But you hear movement around you.");
    context.SetFlag(ROOM, ARRIVED_HERE, 1);
}

fun MapEvent09(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 213) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 212);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREHARPY) == 0) {
        context.SetFlag(PARTY, MOREHARPY, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(5, 35);
        context.GetMonster(1, 17);
        if (context.PartyCount > 2) {
            context.GetMonster(2, 17);
            context.GetMonster(6, 35);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 36);
            context.GetMonster(4, 36);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent0A(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 184) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 183);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREPANTHER) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 26);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 25);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 25);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 26);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent0B(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 183) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 167);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREPANTHER) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 26);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 25);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 25);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 26);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent0C(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 167) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 166);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREPANTHER) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 26);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 25);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 25);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 26);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent0D(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 166) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 165);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREBOAR) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 29);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 30);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 29);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 30);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent0E(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 165) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 181);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREBOAR) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 29);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 30);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 29);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 30);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent0F(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 181) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 197);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREBOAR) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 29);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 30);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 29);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 30);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent10(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 197) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 213);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    if (context.GetFlag(PARTY, MOREBOAR) == 0) {
        context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
        context.GetMonster(1, 29);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 30);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(3, 29);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(4, 30);
        }
    }
    else {
        Quiet(context);
    }
}

fun MapEvent11(context) {
    CheckMap(context);
    if ((context.GetFlag(DUNGEON, LOOKINGFORLADY) == 212) || (context.GetFlag(DUNGEON, FOUGHTLADY) == 1)) {
        if (context.HasItem(LEADENDAGGER)) {
            context.Teleport(10, 2, 228, SOUTH);
        }
        else {
            if (context.PartyLevel(70)) {
                context.Teleport(10, 2, 231, EAST);
            }
            else {
                if (context.PartyLevel(50)) {
                    context.Teleport(10, 2, 230, EAST);
                }
                else {
                    context.Teleport(10, 2, 229, EAST);
                }
            }
        }
    }
    else {
        context.BlockWall(context.Here, context.Facing);
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
}

fun MapEvent12(context) {
    context.ShowPicture(PANTHER);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, PANTHER);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent13(context) {
    context.ShowPicture(SLIME);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, SLIME);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent14(context) {
    context.ShowPicture(BOAR);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, BOAR);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent15(context) {
    context.ShowPicture(HOUND);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, HOUND);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent16(context) {
    context.ShowPicture(BAT);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, BAT);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent17(context) {
    context.ShowPicture(HARPY);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, HARPY);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent18(context) {
    context.ShowPicture(MEDUSA);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, MEDUSA);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent19(context) {
    context.ShowPicture(MINOTAUR);
    if (context.GetFlag(ROOM, ARRIVED_HERE) == 1) {
        context.SetFlag(PARTY, WHATFIGHT, MINOTAUR);
    }
    context.ClearWall(context.Here, context.Facing);
}

fun MapEvent1A(context) {
    context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
}

fun MapEvent1B(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREBOAR, 1);
        context.ShowText("The boars have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREBOAR) == 0) {
        context.SetFlag(PARTY, MOREBOAR, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 21);
        context.GetMonster(2, 21);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 29);
            context.GetMonster(4, 29);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 29);
            context.GetMonster(6, 29);
        }
    }
    else {
        context.ShowText("You have already cleaned out the sty.");
    }
    CheckMap(context);
}

fun MapEvent1C(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREMINOTAUR, 1);
        context.ShowText("The minotaurs have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREMINOTAUR) == 0) {
        context.SetFlag(PARTY, MOREMINOTAUR, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 22);
        context.GetMonster(2, 22);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 28);
            context.GetMonster(4, 28);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 28);
            context.GetMonster(6, 28);
        }
    }
    else {
        context.ShowText("You have already cleaned out the barn.");
    }
    CheckMap(context);
}

fun MapEvent1D(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MORESLIME, 1);
        context.ShowText("The slimes have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MORESLIME) == 0) {
        context.SetFlag(PARTY, MORESLIME, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 23);
        context.GetMonster(2, 27);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 23);
            context.GetMonster(4, 27);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 27);
            context.GetMonster(6, 27);
        }
    }
    else {
        context.ShowText("You have already cleaned out the drains.");
    }
    CheckMap(context);
}

fun MapEvent1E(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREBAT, 1);
        context.ShowText("The bats have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREBAT) == 0) {
        context.SetFlag(PARTY, MOREBAT, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 18);
        context.GetMonster(2, 37);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 18);
            context.GetMonster(4, 18);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 37);
            context.GetMonster(6, 37);
        }
    }
    else {
        context.ShowText("You have already cleaned out the cave.");
    }
    CheckMap(context);
}

fun MapEvent1F(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREMEDUSA, 1);
        context.ShowText("The medusa have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREMEDUSA) == 0) {
        context.SetFlag(PARTY, MOREMEDUSA, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 20);
        context.GetMonster(2, 31);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 20);
            context.GetMonster(4, 31);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 20);
            context.GetMonster(6, 31);
        }
    }
    else {
        context.ShowText("You have already cleaned out the pit.");
    }
    CheckMap(context);
}

fun MapEvent20(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREPANTHER, 1);
        context.ShowText("The brinded cats have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREPANTHER) == 0) {
        context.SetFlag(PARTY, MOREPANTHER, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 24);
        context.GetMonster(2, 24);
        if (context.PartyCount > 2) {
            context.GetMonster(3, 24);
            context.GetMonster(4, 25);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 24);
            context.GetMonster(6, 25);
        }
    }
    else {
        context.ShowText("You have already cleaned out the pride.");
    }
    CheckMap(context);
}

fun MapEvent21(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREHARPY, 1);
        context.ShowText("The harpies have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREHARPY) == 0) {
        context.SetFlag(PARTY, MOREHARPY, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(5, 36);
        context.GetMonster(1, 36);
        if (context.PartyCount > 2) {
            context.GetMonster(2, 36);
            context.GetMonster(6, 35);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 36);
            context.GetMonster(4, 36);
        }
    }
    else {
        context.ShowText("You have already cleaned out the roost.");
    }
    CheckMap(context);
}

fun MapEvent22(context) {
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, MOREDOG, 1);
        context.ShowText("The hell hounds have run away from the Prunes of Cawdor!");
        context.SetFlag(PARTY, USEDPRUNES, 0);
    }
    if (context.GetFlag(PARTY, MOREDOG) == 0) {
        context.SetFlag(PARTY, MOREDOG, 1);
        context.SetBooty(LAVENDERLOTION, WOADWINE, 0, 0, 0, 100);
        context.GetMonster(1, 19);
        context.GetMonster(5, 32);
        if (context.PartyCount > 2) {
            context.GetMonster(2, 19);
            context.GetMonster(5, 32);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 19);
            context.GetMonster(4, 32);
        }
    }
    else {
        context.ShowText("You have already cleaned out the kennels.");
    }
    CheckMap(context);
}

fun MapEvent23(context) {
    var i;
    if (context.Here == 184) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 184);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
    i = context.GetFlag(PARTY, WHATFIGHT);
    CheckMap(context);
    if (context.GetFlag(PARTY, USEDPRUNES) == 1) {
        context.SetFlag(PARTY, USEDPRUNES, 0);
        context.ShowText("The beasts have run from the Prunes of Cawdor.");
        context.ShowText("Isn't that a tasteful turn of phrase?");
    }
    else {
        switch (i) {
            case PANTHER:
                if (context.GetFlag(PARTY, MOREPANTHER) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 24);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 24);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 24);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case SLIME:
                if (context.GetFlag(PARTY, MORESLIME) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 23);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 23);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 23);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case MINOTAUR:
                if (context.GetFlag(PARTY, MOREMINOTAUR) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 22);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 22);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 22);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case BOAR:
                if (context.GetFlag(PARTY, MOREBOAR) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 21);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 21);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 21);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case MEDUSA:
                if (context.GetFlag(PARTY, MOREMEDUSA) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 20);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 20);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 20);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case HOUND:
                if (context.GetFlag(PARTY, MOREDOG) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 19);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 19);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 19);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case HARPY:
                if (context.GetFlag(PARTY, MOREHARPY) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 17);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 17);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 17);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            case BAT:
                if (context.GetFlag(PARTY, MOREBAT) == 0) {
                    context.SetBooty(DRAGONFLAGON, PALACECHALICE, 0, 0, 0, 400);
                    context.GetMonster(1, 18);
                    if (context.PartyCount > 2) {
                        context.GetMonster(2, 18);
                    }
                    if (context.PartyCount > 3) {
                        context.GetMonster(3, 18);
                    }
                }
                else {
                    Quiet(context);
                }
                break;
            default: 
                Quiet(context);
                break;
        }
    }
    context.SetFlag(ROOM, ARRIVED_HERE, 1);
}

fun MapEvent24(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, LOOKINGFORLADY) == 213) {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 212);
    }
    else {
        context.SetFlag(DUNGEON, LOOKINGFORLADY, 0);
    }
}

fun MapEvent25(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.ShowText("'Screw your courage to the sticking place and you'll not fail!  Avaunt!");
        context.SetFlag(PARTY, WAR1, 1);
        context.SetBooty(BLUEBANNER, HURLYBURLY, LEADENDAGGER, BLUEBANNER, LEADENDAGGER, 10000);
        context.GetMonster(1, 38);
        context.GetMonster(5, 37);
        if (context.PartyCount > 2) {
            context.GetMonster(6, 37);
            context.GetMonster(2, 32);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 32);
            context.GetMonster(4, 32);
        }
    }
    else {
        context.ShowText("That was no way to treat a lady.  Then again, she wasn't much of a lady, was she?");
    }
}

fun MapEvent26(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.ShowText("'Screw your courage to the sticking place and you'll not fail!  Avaunt!");
        context.SetFlag(PARTY, WAR1, 1);
        context.SetBooty(BLUEBANNER, HURLYBURLY, LEADENDAGGER, BLUEBANNER, LEADENDAGGER, 10000);
        context.GetMonster(1, 39);
        context.GetMonster(5, 35);
        if (context.PartyCount > 2) {
            context.GetMonster(6, 37);
            context.GetMonster(2, 36);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 32);
            context.GetMonster(4, 32);
        }
    }
    else {
        context.ShowText("That was no way to treat a lady.  Then again, she wasn't much of a lady, was she?");
    }
}

fun MapEvent27(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.ShowText("'Screw your courage to the sticking place and you'll not fail!  Avaunt!");
        context.SetFlag(PARTY, WAR1, 1);
        context.SetBooty(BLUEBANNER, HURLYBURLY, LEADENDAGGER, BLUEBANNER, LEADENDAGGER, 10000);
        context.GetMonster(1, 40);
        context.GetMonster(5, 34);
        if (context.PartyCount > 2) {
            context.GetMonster(6, 37);
            context.GetMonster(2, 32);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 33);
            context.GetMonster(4, 33);
        }
    }
    else {
        context.ShowText("That was no way to treat a lady.  Then again, she wasn't much of a lady, was she?");
    }
}

fun MapEvent28(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.ShowText("'Screw your courage to the sticking place and you'll not fail!  Avaunt!");
        context.SetFlag(PARTY, WAR1, 1);
        context.SetBooty(BLUEBANNER, HURLYBURLY, LEADENDAGGER, BLUEBANNER, LEADENDAGGER, 10000);
        context.GetMonster(1, 40);
        context.GetMonster(5, 34);
        context.GetMonster(6, 36);
        context.GetMonster(2, 34);
        if (context.PartyCount > 3) {
            context.GetMonster(3, 36);
            context.GetMonster(4, 36);
        }
    }
    else {
        context.ShowText("That was no way to treat a lady.  Then again, she wasn't much of a lady, was she?");
    }
}

fun MapEvent29(context) {
    context.SetFlag(DUNGEON, FOUGHTLADY, 1);
    context.ShowText("This section of the bestiary is better lit with torches.");
}

fun MapEvent2A(context) {
    CheckMap(context);
    if (context.GetFlag(PARTY, WAR2) == 0) {
        context.SetFlag(PARTY, WAR2, 1);
        context.ShowText("They may have left the door open, but they sure didn't leave it unguarded!");
        context.SetBooty(SPIKEDSHIELD, WOADWINE, ALDHELMSGAUNTLETS, ADAMANTINELOCKPICK, ALCUINSSTICKS, 1447);
        context.GetMonster(1, 33);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 34);
            context.GetMonster(3, 33);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(4, 34);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 33);
            context.GetMonster(6, 34);
        }
    }
    else {
        context.ShowText("Those wyrms won't be dragon you into their petty squabbles again.");
    }
}

fun MapEvent2B(context) {
    CheckMap(context);
    if (context.GetFlag(PARTY, WAR3) == 0) {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("I guess they are calling it the bestiary for a reason!");
        context.SetBooty(ALDHELMSSTAFF, WOADWINE, ALCUINSCAP, ALFREDSGLOVES, 0, 1447);
        context.GetMonster(1, 32);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 29);
            context.GetMonster(3, 29);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(4, 32);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 29);
            context.GetMonster(6, 32);
        }
    }
    else {
        context.ShowText("Bowser won't be playing any more.  Heh heh.");
    }
}

fun MapEvent2C(context) {
    CheckMap(context);
    if (context.GetFlag(PARTY, WAR4) == 0) {
        context.SetFlag(PARTY, WAR4, 1);
        context.ShowText("You wouldn't have thought this corridor left enough room for harpies to fly.  But they're managing it!");
        context.SetBooty(ALDHELMSHARP, WOADWINE, ALFREDSHAT, 0, 0, 1447);
        context.GetMonster(1, 35);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 35);
            context.GetMonster(3, 18);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(4, 18);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 18);
            context.GetMonster(6, 18);
        }
    }
    else {
        context.ShowText("You made sure that those bats won't ever get tangled in anyone's hair ever again.");
    }
}

fun MapEvent2D(context) {
    CheckMap(context);
    if (context.GetFlag(PARTY, WAR5) == 0) {
        context.SetFlag(PARTY, WAR5, 1);
        context.ShowText("Tchee!  You joined this quest for the glory and the greater good, but these guys seem you're just in it to rob them of their share of the treasure.  En garde!");
        context.SetBooty(ALFREDSROBES, WOADWINE, ALCUINSRING, 0, 0, 1447);
        context.GetMonster(1, 13);
        if (context.PartyCount > 1) {
            context.GetMonster(2, 3);
            context.GetMonster(5, 10);
        }
        if (context.PartyCount > 2) {
            context.GetMonster(4, 14);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(3, 16);
            context.GetMonster(6, 15);
        }
    }
    else {
        context.ShowText("Turns out that you did reduce their share of the treasure.  Serves them right for attacking you.");
    }
}

fun MapEvent2E(context) {
    if ((context.HasItem(ALCUINSCAP)) && (context.HasItem(ALCUINSSTICKS)) && (context.HasItem(ALCUINSRING))) {
        context.ShowText("An old, quavering voice whispers from thin air.");
        context.ShowText("'Well done, young questor.  Thou hast summoned me from afar to aid thee, as was foretold.  I will take thee to the beginning of the path thou must walk, bypassing many a beast and battle.'");
        if (!(context.HasItem(LANTERN))) {
            context.ShowText("'And a bit of advice.  Light is cheap, and life more cheaply ended for one who walks in darkness.  As my life was spent enlightening people, I suggest that thou dost visit the store ere returning to this dark and darksome place.'");
        }
        context.ShowText("'Now may fortune favor thee.'");
        if (context.GetFlag(DUNGEON, FOUGHTLADY) == 1) {
            context.Teleport(10, 2, 212, SOUTH);
        }
        else {
            context.Teleport(10, 2, 184, WEST);
        }
    }
    else {
        context.ClearWall(context.Here, context.Facing);
    }
}

fun MapEvent2F(context) {
    if (context.GetFlag(PARTY, WAR6) == 0) {
        context.SetFlag(PARTY, WAR6, 1);
        context.ShowText("You don't know which is worse: the slimy snakes, or the snaky slimes!");
        context.SetBooty(SPIKEDSHIELD, WOADWINE, ALCUINSCAP, ADAMANTINELOCKPICK, 0, 1447);
        context.GetMonster(1, 20);
        context.GetMonster(2, 23);
        context.GetMonster(3, 20);
        if (context.PartyCount > 2) {
            context.GetMonster(4, 23);
        }
        if (context.PartyCount > 3) {
            context.GetMonster(5, 20);
            context.GetMonster(6, 20);
        }
    }
    else {
        context.ShowText("You're not exactly sure what it was you faced here, but whatever it was, it was green.");
    }
}

fun MapEvent30(context) {
    if ((context.GetFlag(DUNGEON, FOUGHTLADY) == 1) || (context.GetFlag(DUNGEON, WONGAME) == 1)) {
        if ((context.HasItem(ALFREDSHAT)) && (context.HasItem(ALFREDSGLOVES)) && (context.HasItem(ALFREDSROBES))) {
            context.ShowText("A resonant voice speaks to you from thin air.");
            context.ShowText("'I am Alfred, late the king of this land.  Hear me!  The Serpentine Crypt is a death trap, pure and simple.  I will now let you bypass some of its length.");
            context.ShowText("Help given once may yet be given again there, but thou shouldst neither expect nor seek it.  And I can advice thee in this small matter: Cassandra is the mightiest of the Wyrd Sisters.  Thou shouldst focus thy efforts on her first.  Good luck!'");
            context.Teleport(10, 3, 176, NORTH);
        }
        else {
            context.Teleport(10, 3, 240, EAST);
        }
    }
    else {
        context.ShowText("The door refuses to budge.  You feel a mystical link between this door and some entity near here, one you have not yet defeated.");
        context.BlockWall(context.Here, context.Facing);
    }
}

fun MapEvent31(context) {
    CheckMap(context);
    if (context.GetFlag(DUNGEON, SEENRORY) == 1) {
        context.ShowText("Rory's body remains imbedded in the ceiling, a grim reminder of what must be faced down here.");
    }
    else {
        context.SetFlag(DUNGEON, SEENRORY, 1);
        context.ShowText("Something up above catches your eye.  You look up, and see your old friend Rory Applebush, the cheerful halfling you half expected to find juggling the Wyrd Sisters's eyeteeth, imbedded in the ceiling.");
        context.ShowText("The stone has melted, sealing him in, unretrievable.  He died in agony.  Nobody said this quest would be easy.  Nobody said it would be this hard, either.");
    }
}

fun MapEvent32(context) {
    var i;
    CheckMap(context);
    if (context.GetFlag(PARTY, GOTMESSAGE) == 0) {
        context.SetFlag(PARTY, GOTMESSAGE, 1);
        context.ShowPicture(HALFLINGCLERIC);
        i = context.GetFlag(DUNGEON, MESSAGECOUNTER);
        i++;
        context.SetFlag(DUNGEON, MESSAGECOUNTER, i);
        switch (i) {
            case 1:
                context.ShowText("'Turn back!  No quest is worth the risk of facing what Rory faced.  Merciful heavens, but thou must turn back.'  He rushes up the stairs.");
                break;
            case 2:
                context.ShowText("'Drat this place!  This infernal blackness forced me to use my candle, which did not last long.  A hundred curses upon the darkness!'");
                break;
            case 3:
                context.ShowText("'I have learned something of the bestiary.  It is my secret, but I will tell thee this much.  The Wyrd Sisters do breed the beasts in lairs.  Seal the lairs and thou need not face the beasts.'");
                break;
            case 4:
                context.ShowText("'There is a path that includes the cats and the pigs off to the West.  It involves doubling back, thou, and I've not completed it nor seen where a harpier might be found.  Yet!'");
                break;
            case 5:
                context.ShowText("'The end of the path lies three rooms to the west of where we must enter the maze!  I will try backtracking!'");
                break;
            case 6:
                context.ShowText("'The prophecy about Aldhelm is true!  I need not face Rory's unyielding gaze as I enter this room, but I must always face it on the way out, alas.");
                break;
            case 7:
                context.ShowText("'Alcuin spoke to me!  I now know the path!  I refer thee to the Library, to Astrologia, an thou dost not yet know the way to find her Ladyship.");
                break;
            default: 
                context.ShowText("'I seek a way to free Rory's corpse.  At the least he deserves a decent burial.  But the dragon's flames were hot enough to melt the very stone.  I know not what Rory said, but it must have infuriated the wyrm!'");
                break;
        }
    }
}
