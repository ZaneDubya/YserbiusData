#include "defines.loh"
#include "flags.loh"

#define SAWDESK 1
#define WAR1 2
#define WAR2 3
#define WAR3 4
#define WAR4 5
#define WAR5 6
#define WAR6 7
#define CTR 8
#define SAWSMITHY 9
#define BEENHERE 10
#define WID1 11
#define SAWTHIEF 12
#define DONEROOM 13
#define LOUDLY 14
#define WASLOUD 15
#define SAWBARRACKS 16
#define SAWLIBRARY 17
#define SAWLAUNDRY 18
#define SAWBATHS 19
#define SAWQUARTER 20
#define SAWBATH 21
#define SAWARMORY 22
#define SAWTANNERY 23

fun MapEvent01(context) {
    context.SetFlag(DUNGEON, ENTEREDCHIVALROUS, 1);
    if (context.GetFacing == SOUTH) {
        context.ShowText("This way to the Foyer of Cawdor.");
    }
}

fun MapEvent02(context) {
    context.ShowPortrait(TROLLKNIGHT);
    if (context.GetFlag(DUNGEON, KNIGHTROOM) == 1) {
        if ((context.GetFlag(PARTY, SAWDESK) == 0) && (context.GetFlag(PARTY, BEENHERE) == 0)) {
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("Roxanna greets you fondly.  'It speaks well of thee that thou dost return to diminish the population of rude and unchivalrous beings that have inhabited this place since thy last visit.  May fortune favor thee!");
            context.SetFlag(PARTY, SAWDESK, 2);
        }
        else {
            if (context.GetFlag(PARTY, SAWDESK) == 2) {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("Roxanna greets you.  'Gentle sir, I can show my gratitude for thy aid in placating the foul inhabitants of this place.  I have an item which once daily grants me a powerful heal spell.'");
                context.ShowText("You are healed!");
                context.HealPlayer(context.GetMaxHealth);
                context.SetFlag(PARTY, SAWDESK, 1);
                context.ShowText("'Godspeed thee on thy missions here!'");
            }
            else {
                context.ShowText("Roxanna nods as you pass, but says nothing.");
            }
        }
    }
    else {
        if ((!(context.GetFlag(PARTY, WAR1) == 0)) && (!(context.GetFlag(PARTY, WAR2) == 0)) && (!(context.GetFlag(PARTY, WAR3) == 0)) && (!(context.GetFlag(PARTY, WAR4) == 0)) && (!(context.GetFlag(PARTY, WAR5) == 0)) && (!(context.GetFlag(PARTY, WAR6) == 0)) && ((context.GetFlag(DUNGEON, KNIGHTROOM) == 0) || (context.GetFlag(PARTY, DONEROOM) == 1))) {
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("'I salute thee, for thou hast proven thyself to be of gentle mien and noble heart.  I am pleased to grant thee an award which, mayhaps, will aid thee in thy future chivalric endeavors.");
            context.GiveItem(SMALLLETTEROFCREDIT);
            context.AddExperience(4000);
            if ((context.GetSkillLevel(DEFLECT_MAGIC_SKILL) == 0) && (context.GetGuild == KNIGHT)) {
                context.ModSkillLevel(DEFLECT_MAGIC_SKILL, 1);
                context.ShowText("Roxanne draws you aside and whispers to you.");
                context.ShowText("'Thou now knowest how to deflect magical assaults' she whispers.");
                context.ShowText("She steps forward and speaks loudly again.");
            }
            if (context.GetGuildAny(KNIGHT)) {
                context.ShowText("Roxanne draws your party's knights aside for a few private words, and then returns.");
            }
            context.ShowText("She clasps your forearm, the old style of shaking hands.  'Now I must return to my duties.  Fare thee well!'");
            context.SetFlag(DUNGEON, KNIGHTROOM, 1);
        }
        else {
            if ((!(context.GetFlag(PARTY, WAR1) == 0)) && (!(context.GetFlag(PARTY, WAR2) == 0)) && (!(context.GetFlag(PARTY, WAR3) == 0)) && (!(context.GetFlag(PARTY, WAR4) == 0)) && (!(context.GetFlag(PARTY, WAR5) == 0)) && (!(context.GetFlag(PARTY, WAR6) == 0))) {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("'I appreciate thy efforts against the unholy creatures residing here, but I lack the means to reward thee for thy efforts.  This will have to suffice.'");
                context.AddExperience(1000);
                context.GiveItem(SMALLLETTEROFCREDIT);
                context.ShowText("'Thou art needed elsewhere.  Farewell....'");
                context.Teleport(1, 1, 3, SOUTH);
            }
            else {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("'I am Roxanna, the guardian of this gate.  I am charged to prevent the escape of the foul beasts that reside herein.  I thank thee for assisting me by battling the foul and fell beasts that live here.");
                context.SetFlag(PARTY, SAWDESK, 1);
            }
        }
    }
}

fun MapEvent03(context) {
    if (context.GetFlag(PARTY, WAR1) == 0) {
        context.SetFlag(PARTY, WAR1, 1);
        context.ShowText("Incoming!");
        context.SetTreasure(SCROLLOFPROTECTION, BEGONIABALM, 0, 0, 0, 144);
        context.AddEncounter(1, 25);
        context.AddEncounter(5, 27);
        if (context.PartyCount > 2) {
            context.AddEncounter(2, 26);
            context.AddEncounter(6, 27);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(4, 28);
            context.AddEncounter(3, 29);
        }
    }
    else {
        context.ShowText("You give silent thanks that you were the one who survived the battle here.");
    }
}

fun MapEvent04(context) {
    if (((context.GetFlag(PARTY, WAR1) == 1) && (context.GetFlag(PARTY, WAR2) == 1) && (context.GetFlag(PARTY, WAR3) == 1) && (context.GetFlag(PARTY, WAR4) == 1) && (context.GetFlag(PARTY, WAR5) == 1)) || (context.GetFlag(DUNGEON, KNIGHTROOM) == 1) || (context.GetFlag(DUNGEON, KNIGHTROOM) == 2)) {
        context.ClearWallBlock(context.GetTile, context.GetFacing);
        if ((!(context.GetFlag(PARTY, LOUDLY) == 2)) && ((context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) || (context.UsedItem(SILVERLOCKPICK, ADAMANTINELOCKPICK)) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING)))) {
            context.ShowText("You think the tool will enable you to proceed discreetly.");
            context.SetFlag(PARTY, LOUDLY, 3);
        }
        else {
            context.SetFlag(PARTY, LOUDLY, 1);
        }
    }
    else {
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("A familiar voice whispers to you.");
        context.ShowText("'Before thou dost assay the ultimate combat in this place, thou hadst best prove thy mettle against the lesser creatures and citizens found hereabouts.");
    }
}

fun MapEvent06(context) {
    var i;
    i = 0;
    var k;
    k = 0;
    i = context.GetFlag(PARTY, CTR);
    i++;
    k = i;
    if (k > 19) {
        k = (k - 20);
    }
    if (k > 14) {
        k = (k - 15);
    }
    if (k > 9) {
        k = (k - 10);
    }
    if (k > 4) {
        k = (k - 5);
    }
    if (k < 0) {
        k = 0;
    }
    if (k > 29) {
        k = 0;
    }
    if (i > 24) {
        i = 0;
    }
    context.SetFlag(PARTY, CTR, i);
    if ((i == 26) | (i == 20) | (i == 14) | (i == 8) | (i == 2)) {
        switch (k) {
            case 0:
                context.ShowPortrait(HALFLINGTHIEF);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("You see a heavily scarred and well equipped halfling striding confidently towards you.  He is wearing Gorgon's Gauntlets and carrying Macduff's Maul.");
                context.ShowText("He says, 'Thou wouldst not think it to look at me, but singlehandedly have I slain sixteen giants, and I seek number seventeen.  Poach not on my self-appointed terrain, sir knight!'");
                context.ShowText("You wisely decide to let him go his own way.");
                break;
            case 1:
                context.ShowPortrait(HALFLINGCLERIC);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("A small but sturdy halfling knight greets you.");
                context.ShowText("'Good morning, neighbor.  I am sworn to vengeance against Magog, a giant who has terrorised one halfling village too many.  To defeat him, I seek Swithun's Staff?  Know you where I might find one?'");
                context.ShowText("You shake your head.  He sighs and wanders off.");
                break;
            case 2:
                context.ShowPortrait(HALFLINGKNIGHT);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("A small, smiling halfling knight, carrying a Lozenge Spear, greets you.");
                context.ShowText("'What ho!  Fellow knight, art thou sworn against the tall, that is to say, art thou on a quest against giantkind?'");
                context.ShowText("You politely indicate that you are not.");
                context.ShowText("'Very well, then, but an thou findest one so pledged, do send him to me!'  The halfling walks off.");
                break;
            case 3:
                context.ShowPortrait(DWARFWIZARD);
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("A dwarf holds up her hand in greeting.");
                context.ShowText("'I say, friend!  I am in a bit of a bother.");
                context.ShowText("Knowest thou whether the Antlered Helm or Ironside's Headgear is the more effective defense against giants?  I have both and I must decide which to use.'");
                context.ShowText("You tell her you don't know.");
                context.ShowText("'Ah, well, empirical evidence it must be, then.'  She departs.");
                break;
            case 4:
                context.ShowText("This must be the main minotaur migration mob!");
                context.AddEncounter(1, 15);
                if (context.PartyCount > 2) {
                    context.AddEncounter(2, 23);
                }
                if (context.PartyCount > 3) {
                    context.AddEncounter(3, 40);
                    context.AddEncounter(4, 40);
                }
                break;
        }
    }
}

fun MapEvent07(context) {
    if (context.GetFlag(PARTY, SAWSMITHY) == 0) {
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("*");
        context.ShowText("This is the remains of a smithy.  A cracked anvil, some broken bellows, shattered shields, and splintered swords, are but some of the debris you see.");
        context.SetFlag(PARTY, SAWSMITHY, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("The smithy remains as when you last saw it.");
        }
    }
}

fun MapEvent08(context) {
    if ((context.GetFlag(DUNGEON, GOT_SHIELD) == 1) || (context.GetFlag(PARTY, BEENHERE) == 1)) {
        context.ShowText("A voice whispers from thin air....");
        context.ShowText("'I'm sorry, but there's nothing else I can do for you here.'");
    }
    else {
        context.ShowPortrait(LADYMACBETH);
        context.SetFlag(PARTY, BEENHERE, 1);
        if ((context.GetFlag(DUNGEON, BARBARIANROOM) == 1) && (context.GetFlag(DUNGEON, WIZARDROOM) == 1) && (context.GetFlag(DUNGEON, CLERICROOM) == 1) && (context.GetFlag(DUNGEON, RANGERROOM) == 1) && (context.GetFlag(DUNGEON, THIEFROOM) == 1)) {
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("'Huzzah!  Thou hast done so well hitherto that I can safely reward thee.  I think me knowledge of the spell of shielding will best serve thee now.'");
            context.ShowText("You realize that you now know that spell!");
            context.GiveSpell(SHIELD_SPELL, 1);
            context.SetFlag(DUNGEON, GOT_SHIELD, 1);
            if (context.GetFlag(DUNGEON, KNIGHTROOM) == 0) {
                context.SetFlag(DUNGEON, KNIGHTROOM, 1);
                context.SetFlag(PARTY, DONEROOM, 1);
            }
            if (context.GetFlag(DUNGEON, GOT_TELEPORT) == 0) {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("'Henceforth thy journey will become increasingly perilous.  It behooves me to teach thee a swifter way to retreat to places where thou may replenish thy supplies and renew thy strength and vigor.'");
                context.SetFlag(DUNGEON, KNIGHTROOM, 1);
                context.GiveSpell(TELEPORT_SPELL, 1);
                context.SetFlag(DUNGEON, GOT_TELEPORT, 1);
                context.ShowText("You now know the spell of teleport.");
            }
        }
        else {
            if ((context.GetFlag(DUNGEON, GOT_TELEPORT) == 0) && (!(context.GetFlag(PARTY, WAR1) == 0)) && (!(context.GetFlag(PARTY, WAR2) == 0)) && (!(context.GetFlag(PARTY, WAR3) == 0)) && (!(context.GetFlag(PARTY, WAR4) == 0)) && (!(context.GetFlag(PARTY, WAR5) == 0)) && (!(context.GetFlag(PARTY, WAR6) == 0))) {
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("*");
                context.ShowText("'I applaud and praise thee, who hast risked life and limb on my behalf.  As thy journey waxes ever more perilous, it behooves me to teach thee a swifter way to retreat to places where thou may replenish thy supplies and renew thy strength and vigor.");
                context.SetFlag(DUNGEON, KNIGHTROOM, 1);
                context.GiveSpell(TELEPORT_SPELL, 1);
                context.SetFlag(DUNGEON, GOT_TELEPORT, 1);
                context.ShowText("You now know the spell of teleport.");
            }
            else {
                if (context.GetGuild == KNIGHT) {
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("*");
                    context.ShowText("'Thou hast received all the rewards I can safely grant thee here, lest my sisters notice and suspect me.'");
                }
                else {
                    if (context.GetFlag(DUNGEON, CHIVREWARD) == 0) {
                        context.ShowText("'Thou art surviving, which is the important thing.  Take thee this item which mayhaps will help thee to continue doing so.'");
                        context.SetFlag(DUNGEON, CHIVREWARD, 1);
                        context.GiveItem(SMALLLETTEROFCREDIT);
                    }
                    else {
                        context.ShowText("'Thou hast earned no further rewards from me, good ticklebrain.'");
                    }
                }
            }
        }
    }
}

fun MapEvent09(context) {
    if (context.GetFlag(DUNGEON, SEENRORY) == 0) {
        if (context.GetFlag(PARTY, SAWTHIEF) == 0) {
            context.SetFlag(PARTY, SAWTHIEF, 1);
            context.ShowPortrait(HALFLINGTHIEF);
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("*");
            context.ShowText("A jauntily clad halfling greets you.");
            context.ShowText("'Good gentle folk, let me not delay thee o'ermuch.");
            context.ShowText("I have but this word to put in thy ear.  Ask not from whence I did learn of it, but I have been charged with the task of spreading this missive as far as I might, and thou art now my spreadee.");
            context.ShowText("Hark thee and mark thee: there are many most potent items consisting of a body part of a creature.  For example, the Eye of Newt, the Toe of Frog, et al.");
            context.ShowText("These items all are of immense power and restrictions.  They can slay most any creature, but use them with care: once used, once useless.");
            context.ShowText("An thou dost pass these words along, I shall stand in thy debt.'  The halfling hurries off.");
            context.SetFlag(DUNGEON, SAW_RANGER, 1);
        }
    }
    else {
        context.ShowText("It was here that you learned that Rory, amongst others, was on your quest.  You promise yourself that your next toast of good brown ale will be for lost friends.");
    }
}

fun MapEvent0A(context) {
    if (context.GetFlag(PARTY, WAR3) == 1) {
        context.ShowText("You're just glad you're not the janitor, what with all these minotaur morsels lying around here.");
    }
    else {
        context.SetFlag(PARTY, WAR3, 1);
        context.ShowText("Uh oh.  Those minotaurs look angry, and that's no bull.");
        if (context.PartyCount > 3) {
            context.ShowText("Maybe the spellcasters moving them along have something to do with that.");
        }
        context.SetTreasure(BLUEBERRYBREW, BEGONIABALM, 0, 0, 0, 207);
        context.AddEncounter(1, 40);
        context.AddEncounter(2, 40);
        if (context.PartyCount > 2) {
            context.AddEncounter(3, 40);
            context.AddEncounter(4, 40);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(5, 31);
            context.AddEncounter(6, 31);
        }
    }
}

fun MapEvent0B(context) {
    if (context.GetFlag(PARTY, WAR4) == 1) {
        context.ShowText("There's something grotesquely comforting about having survived a combat.");
    }
    else {
        context.ShowText("There's a thin thin line between a smiling and a snarling face and - yup! - these guys are snarling!");
        context.SetFlag(PARTY, WAR4, 1);
        if (context.PartyCount > 3) {
            context.ShowText("And in desperate need of orthodontia.");
        }
        context.SetTreasure(SCROLLOFPROTECTION, BEGONIABALM, BLUEBERRYBREW, 0, 0, 188);
        context.AddEncounter(1, 30);
        context.AddEncounter(2, 36);
        if (context.PartyCount > 2) {
            context.AddEncounter(5, 31);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(3, 34);
            context.AddEncounter(4, 33);
            context.AddEncounter(6, 27);
        }
    }
}

fun MapEvent0C(context) {
    if (context.GetFlag(PARTY, WAR5) == 1) {
        context.ShowText("There are enough feline allergens here to make all of Edinburgh sneeze!");
    }
    else {
        context.ShowText("Man!  Those cats are so big, their purring sounds like buzzsaws!  Not that they're purring right now, either.");
        context.SetFlag(PARTY, WAR5, 1);
        context.AddEncounter(1, 38);
        context.AddEncounter(2, 38);
        if (context.PartyCount > 1) {
            context.AddEncounter(3, 39);
        }
        if (context.PartyCount > 2) {
            context.ShowText("Unless they're purring in anticipation of a filling meal: hero tartar!");
            context.AddEncounter(3, 39);
            context.AddEncounter(4, 39);
            context.AddEncounter(6, 38);
        }
    }
}

fun MapEvent0D(context) {
    if (context.GetFlag(PARTY, WAR6) == 1) {
        context.ShowText("'If you are going to have to fight, it's a lot more pleasant having fought someone with a hefty purse,' you think to yourself, recalling the battle here.");
    }
    else {
        context.SetFlag(PARTY, WAR6, 1);
        if (context.GetFlag(PARTY, LOUDLY) == 0) {
            context.ShowText("Ah, heck!  You thought this was a good spot for an ambush.  Evidently, so did they.");
            context.DamagePlayer(context.GetHealth / 3);
        }
        else {
            context.ShowText("You know, those thievish skills and lockpicks may have something going for them after all.");
            context.AddExperience(500);
        }
        if (context.PartyCount > 2) {
            context.ShowText("'Some battles were meant to be run away from. 'Tis a shame that some can't be run away from.");
        }
        context.SetFlag(PARTY, LOUDLY, 0);
        context.SetTreasure(PETUNIAPOULTICE, BLUEBERRYBREW, 0, 0, 0, 542);
        context.AddEncounter(1, 37);
        context.AddEncounter(2, 37);
        context.AddEncounter(5, 27);
        context.AddEncounter(6, 27);
        if (context.PartyCount > 2) {
            context.AddEncounter(3, 37);
            context.AddEncounter(4, 37);
        }
    }
}

fun MapEvent0E(context) {
    if (context.GetFlag(PARTY, WAR6) == 0) {
        if ((context.GetFlag(PARTY, LOUDLY) == 3) || ((context.GetFlag(PARTY, LOUDLY) == 1) && ((context.UsedItem(WOODENLOCKPICK, IRONLOCKPICK)) || (context.UsedItem(SILVERLOCKPICK, ADAMANTINELOCKPICK)) || (context.UsedItem(SKELETONKEYRING, SKELETONKEYRING))))) {
            context.ShowText("Carefully using the tool, you managed to open the door without much noise.");
            context.SetFlag(PARTY, LOUDLY, 3);
        }
        else {
            context.ShowText("The door made a lot of noise as you came through.");
            context.SetFlag(PARTY, LOUDLY, 0);
            context.SetFlag(PARTY, WASLOUD, 1);
        }
    }
}

fun MapEvent0F(context) {
    context.SetFlag(PARTY, LOUDLY, 0);
}

fun MapEvent10(context) {
    if (context.GetFlag(PARTY, SAWBARRACKS) == 0) {
        context.ShowText("You think this used to be a barracks before someone reduced all the beds to kindling.");
        context.SetFlag(PARTY, SAWBARRACKS, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("The barracks is as you last saw it.");
        }
    }
}

fun MapEvent11(context) {
    if (context.GetFlag(PARTY, WAR2) == 1) {
        context.ShowText("You smile, grimly: you, at least, walked away from this killing place.");
    }
    else {
        context.SetFlag(PARTY, WAR2, 1);
        context.ShowText("Again with the fighting?  Why is it that nobody here wants to make love, not war?");
        if (context.PartyCount > 3) {
            context.ShowText("Even make 'like' would be a pleasant change!");
        }
        context.SetTreasure(BEGONIABALM, BLUEBERRYBREW, 0, 0, 0, 542);
        context.AddEncounter(1, 32);
        context.AddEncounter(2, 35);
        if (context.PartyCount > 2) {
            context.AddEncounter(5, 33);
            context.AddEncounter(6, 33);
        }
        if (context.PartyCount > 3) {
            context.AddEncounter(3, 34);
        }
    }
}

fun MapEvent12(context) {
    if (context.GetFlag(PARTY, SAWLIBRARY) == 0) {
        context.ShowText("This appears to have been a library, but all the furniture has been smashed or burned, and only the scattered remains of some books indicate what it used to be.");
        context.SetFlag(PARTY, SAWLIBRARY, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("The library is as you last saw it.");
        }
    }
}

fun MapEvent14(context) {
    if (context.GetFlag(PARTY, SAWLAUNDRY) == 0) {
        context.ShowText("This must have been some kind of laundry room.  The broken tubs could have been baths, but you spot a washboard that is just a little too rough for skin in the corner.");
        context.SetFlag(PARTY, SAWLAUNDRY, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("The laundry is as you last saw it.");
        }
    }
}

fun MapEvent15(context) {
    context.Teleport(1, 1, 3, SOUTH);
}

fun MapEvent16(context) {
    if (context.GetFlag(PARTY, SAWBATHS) == 0) {
        context.ShowText("The tile floors and deep basins indicate that this could only have been the communal baths.");
        context.SetFlag(PARTY, SAWBATHS, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("There is still no hot water in these baths.");
        }
    }
}

fun MapEvent17(context) {
    if (context.GetFlag(PARTY, SAWQUARTER) == 0) {
        context.ShowText("This was some important person's private quarters.  You can see the four posts which are all that remain intact of what was once a luxurious bed.  A wardrobe is smashed to bits.  Whoever searched here was thorough, if not neat.");
        context.SetFlag(PARTY, SAWQUARTER, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("These quarters are as you last saw them.");
        }
    }
}

fun MapEvent18(context) {
    context.ShowPortrait(FOUNTAIN);
    var i;
    i = 0;
    i = context.GetFlag(DUNGEON, BASINCTR);
    i++;
    if (i > 10) {
        i = 1;
    }
    if (context.GetTile == 111) {
        context.ShowText("Yup, that's a wash tub.");
    }
    else {
        context.ShowText("Yup, that's a bath tub.");
    }
    if (i == 6) {
        context.ShowText("All right, I know it's a picture of a fountain, but we didn't have the world's biggest art budget.  Work with me, people, work with me!");
    }
    context.SetFlag(DUNGEON, BASINCTR, i);
    switch (i) {
        case 1:
            context.ShowText("Fortunately your clothes got squeaky clean down in the dissolving pool.  Not to mention your skin!");
            break;
        case 2:
            context.ShowText("You find a washer repairman, sobbing because it's just too low tech to break.");
            break;
        case 3:
            context.ShowText("Well, that water does look awfully inviting, but your equipment might rust.");
            break;
        case 4:
            context.ShowText("They must pay a lot to some dragons to heat up the water in here.");
            break;
        case 5:
            context.ShowText("Why look!  You've never seen indoor running water before!  And considering 13th century hygiene, you can understand why water would want to flee from the likes of you.");
            break;
        case 6:
            context.ShowText("You don't know about this.  Every time you see a quantity of steaming hot water that large, you can't but help worry that someone is planning a meal around adventurer soup.");
            break;
        case 7:
            context.ShowText("Hey!  Nobody's gonna fool YOU that easily!  You know full well that there's an extra ten gold piece charge for the first person to use the hot water.");
            break;
        case 8:
            context.ShowText("You wisely refuse to use any communal washing facilities 600 years before Marx invented communism.  You don't want to run any risks of getting blamed for anything, do you?");
            break;
        case 9:
            context.ShowText("Judging from the smell, the last person to use this was a barbarian.  All thoughts of using it yourself before the next refill flee from your mind.");
            break;
        case 10:
            context.ShowText("You're just glad you're not the one responsible for filling this thing!");
            break;
    }
}

fun MapEvent1B(context) {
    if (context.GetFacing == WEST) {
        context.ShowText("This room has been mistreated so badly you have no idea what its purpose used to be.");
    }
}

fun MapEvent1C(context) {
    if (context.GetFlag(PARTY, SAWBATH) == 0) {
        context.ShowText("This was, perhaps, the commanding officer's private bath.  The tile is good, and there is only one tub and one sink.  But it's just a guess.");
        context.SetFlag(PARTY, SAWBATH, 1);
    }
    else {
        if (context.GetFacing == SOUTH) {
            context.ShowText("The bath tub still steams invitingly.");
        }
    }
}

fun MapEvent1D(context) {
    context.ShowText("You lament the chipped and cracked tile.  Why must vandals be so, well, vandalous?");
    if (context.UsedSkill(DETECT_SKILL) >= 4 || context.UsedSpell(TRUE_SEEING_SPELL) || context.UsedItem(CRYSTALBALL, CRYSTALBALL) || context.UsedItem(IVARSHELM, IVARSHELM) || context.UsedItem(ANTLEREDHELM, ANTLEREDHELM) || context.UsedItem(ALCUINSRING, ALCUINSRING) || context.UsedItem(ALCUINSSTICKS, ALCUINSSTICKS)) {
        if (context.GetFlag(DUNGEON, GOTKNIGHTGOLD) == 0) {
            context.ShowText("You spot a loose tile.  After some effort, you pry it loose.  It appears whoever occupied this room decided to stash some cash here, just in case.");
            context.SetFlag(DUNGEON, GOTKNIGHTGOLD, 1);
            context.ModGold(833);
            context.ShowText("You chuckle to yourself and decide it was here in case you came along.");
        }
        else {
            context.ShowText("The loose tile is empty.");
        }
    }
}

fun MapEvent1E(context) {
    if (context.GetFlag(PARTY, SAWARMORY) == 0) {
        context.ShowText("Maybe this was an armory.  Those poles could have been for polearms, those clumps of metal might have been arrowheads, and maybe those were swords.  Maybe.");
        context.SetFlag(PARTY, SAWARMORY, 1);
    }
    else {
        context.ShowText("The armory is as uninteresting as ever.");
    }
}

fun MapEvent1F(context) {
    if (context.GetFlag(PARTY, SAWTANNERY) == 0) {
        context.ShowText("Mind you, there's nothing remaining that would give a clue, but from the rank odors that years of vacancy cannot remove, you suspect this once was a tannery.");
        context.SetFlag(PARTY, SAWTANNERY, 1);
    }
}
